<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="474" onload="init(evt)" viewBox="0 0 1200 474" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="474" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python 3_agents_Simulation_decentralized.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="463.00"> </text><svg id="frames" x="10" width="1180" total_samples="57673"><g><title>discrete_dynamics_multiple (3_agents_Simulation_decentralized.py:57) (64 samples, 0.11%)</title><rect x="0.1092%" y="260" width="0.1110%" height="15" fill="rgb(227,0,7)" fg:x="63" fg:w="64"/><text x="0.3592%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (62 samples, 0.11%)</title><rect x="0.5150%" y="340" width="0.1075%" height="15" fill="rgb(217,0,24)" fg:x="297" fg:w="62"/><text x="0.7650%" y="350.50"></text></g><g><title>__init__ (autograd/core.py:36) (59 samples, 0.10%)</title><rect x="0.5202%" y="356" width="0.1023%" height="15" fill="rgb(221,193,54)" fg:x="300" fg:w="59"/><text x="0.7702%" y="366.50"></text></g><g><title>__mul__ (autograd/numpy/numpy_boxes.py:27) (102 samples, 0.18%)</title><rect x="0.4526%" y="324" width="0.1769%" height="15" fill="rgb(248,212,6)" fg:x="261" fg:w="102"/><text x="0.7026%" y="334.50"></text></g><g><title>unicycle_continuous_dynamics (3_agents_Simulation_decentralized.py:28) (205 samples, 0.36%)</title><rect x="0.4369%" y="308" width="0.3555%" height="15" fill="rgb(208,68,35)" fg:x="252" fg:w="205"/><text x="0.6869%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (58 samples, 0.10%)</title><rect x="0.8427%" y="340" width="0.1006%" height="15" fill="rgb(232,128,0)" fg:x="486" fg:w="58"/><text x="1.0927%" y="350.50"></text></g><g><title>__mul__ (autograd/numpy/numpy_boxes.py:27) (86 samples, 0.15%)</title><rect x="0.8011%" y="324" width="0.1491%" height="15" fill="rgb(207,160,47)" fg:x="462" fg:w="86"/><text x="1.0511%" y="334.50"></text></g><g><title>unicycle_continuous_dynamics (3_agents_Simulation_decentralized.py:29) (173 samples, 0.30%)</title><rect x="0.7924%" y="308" width="0.3000%" height="15" fill="rgb(228,23,34)" fg:x="457" fg:w="173"/><text x="1.0424%" y="318.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:60) (63 samples, 0.11%)</title><rect x="1.1531%" y="340" width="0.1092%" height="15" fill="rgb(218,30,26)" fg:x="665" fg:w="63"/><text x="1.4031%" y="350.50"></text></g><g><title>discrete_dynamics (3_agents_Simulation_decentralized.py:47) (630 samples, 1.09%)</title><rect x="0.2393%" y="292" width="1.0924%" height="15" fill="rgb(220,122,19)" fg:x="138" fg:w="630"/><text x="0.4893%" y="302.50"></text></g><g><title>unicycle_continuous_dynamics (3_agents_Simulation_decentralized.py:32) (138 samples, 0.24%)</title><rect x="1.0924%" y="308" width="0.2393%" height="15" fill="rgb(250,228,42)" fg:x="630" fg:w="138"/><text x="1.3424%" y="318.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (129 samples, 0.22%)</title><rect x="1.1080%" y="324" width="0.2237%" height="15" fill="rgb(240,193,28)" fg:x="639" fg:w="129"/><text x="1.3580%" y="334.50"></text></g><g><title>trace (autograd/tracer.py:10) (741 samples, 1.28%)</title><rect x="0.1058%" y="212" width="1.2848%" height="15" fill="rgb(216,20,37)" fg:x="61" fg:w="741"/><text x="0.3558%" y="222.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (741 samples, 1.28%)</title><rect x="0.1058%" y="228" width="1.2848%" height="15" fill="rgb(206,188,39)" fg:x="61" fg:w="741"/><text x="0.3558%" y="238.50"></text></g><g><title>f (3_agents_Simulation_decentralized.py:207) (740 samples, 1.28%)</title><rect x="0.1075%" y="244" width="1.2831%" height="15" fill="rgb(217,207,13)" fg:x="62" fg:w="740"/><text x="0.3575%" y="254.50"></text></g><g><title>discrete_dynamics_multiple (3_agents_Simulation_decentralized.py:58) (675 samples, 1.17%)</title><rect x="0.2202%" y="260" width="1.1704%" height="15" fill="rgb(231,73,38)" fg:x="127" fg:w="675"/><text x="0.4702%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (3_agents_Simulation_decentralized.py:58) (671 samples, 1.16%)</title><rect x="0.2271%" y="276" width="1.1635%" height="15" fill="rgb(225,20,46)" fg:x="131" fg:w="671"/><text x="0.4771%" y="286.50"></text></g><g><title>make_vjp (autograd/core.py:10) (756 samples, 1.31%)</title><rect x="0.1058%" y="196" width="1.3108%" height="15" fill="rgb(210,31,41)" fg:x="61" fg:w="756"/><text x="0.3558%" y="206.50"></text></g><g><title>jacobian (autograd/differential_operators.py:57) (759 samples, 1.32%)</title><rect x="0.1040%" y="180" width="1.3160%" height="15" fill="rgb(221,200,47)" fg:x="60" fg:w="759"/><text x="0.3540%" y="190.50"></text></g><g><title>standard_basis (autograd/numpy/numpy_vspaces.py:18) (69 samples, 0.12%)</title><rect x="1.6212%" y="228" width="0.1196%" height="15" fill="rgb(226,26,5)" fg:x="935" fg:w="69"/><text x="1.8712%" y="238.50"></text></g><g><title>toposort (autograd/util.py:29) (73 samples, 0.13%)</title><rect x="2.1726%" y="260" width="0.1266%" height="15" fill="rgb(249,33,26)" fg:x="1253" fg:w="73"/><text x="2.4226%" y="270.50"></text></g><g><title>toposort (autograd/util.py:35) (95 samples, 0.16%)</title><rect x="2.4604%" y="260" width="0.1647%" height="15" fill="rgb(235,183,28)" fg:x="1419" fg:w="95"/><text x="2.7104%" y="270.50"></text></g><g><title>toposort (autograd/util.py:36) (81 samples, 0.14%)</title><rect x="2.6251%" y="260" width="0.1404%" height="15" fill="rgb(221,5,38)" fg:x="1514" fg:w="81"/><text x="2.8751%" y="270.50"></text></g><g><title>toposort (autograd/util.py:37) (61 samples, 0.11%)</title><rect x="2.7656%" y="260" width="0.1058%" height="15" fill="rgb(247,18,42)" fg:x="1595" fg:w="61"/><text x="3.0156%" y="270.50"></text></g><g><title>backward_pass (autograd/core.py:19) (645 samples, 1.12%)</title><rect x="1.8119%" y="244" width="1.1184%" height="15" fill="rgb(241,131,45)" fg:x="1045" fg:w="645"/><text x="2.0619%" y="254.50"></text></g><g><title>backward_pass (autograd/core.py:20) (74 samples, 0.13%)</title><rect x="2.9303%" y="244" width="0.1283%" height="15" fill="rgb(249,31,29)" fg:x="1690" fg:w="74"/><text x="3.1803%" y="254.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (123 samples, 0.21%)</title><rect x="3.6967%" y="292" width="0.2133%" height="15" fill="rgb(225,111,53)" fg:x="2132" fg:w="123"/><text x="3.9467%" y="302.50"></text></g><g><title>reshape (&lt;__array_function__ internals&gt;:5) (106 samples, 0.18%)</title><rect x="3.7262%" y="308" width="0.1838%" height="15" fill="rgb(238,160,17)" fg:x="2149" fg:w="106"/><text x="3.9762%" y="318.50"></text></g><g><title>reshape (numpy/core/fromnumeric.py:298) (94 samples, 0.16%)</title><rect x="3.7470%" y="324" width="0.1630%" height="15" fill="rgb(214,148,48)" fg:x="2161" fg:w="94"/><text x="3.9970%" y="334.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (62 samples, 0.11%)</title><rect x="3.8025%" y="340" width="0.1075%" height="15" fill="rgb(232,36,49)" fg:x="2193" fg:w="62"/><text x="4.0525%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:582) (260 samples, 0.45%)</title><rect x="3.5944%" y="276" width="0.4508%" height="15" fill="rgb(209,103,24)" fg:x="2073" fg:w="260"/><text x="3.8444%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (75 samples, 0.13%)</title><rect x="3.9152%" y="292" width="0.1300%" height="15" fill="rgb(229,88,8)" fg:x="2258" fg:w="75"/><text x="4.1652%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:35) (109 samples, 0.19%)</title><rect x="4.0574%" y="292" width="0.1890%" height="15" fill="rgb(213,181,19)" fg:x="2340" fg:w="109"/><text x="4.3074%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (249 samples, 0.43%)</title><rect x="4.0452%" y="276" width="0.4317%" height="15" fill="rgb(254,191,54)" fg:x="2333" fg:w="249"/><text x="4.2952%" y="286.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:654) (64 samples, 0.11%)</title><rect x="4.3660%" y="292" width="0.1110%" height="15" fill="rgb(241,83,37)" fg:x="2518" fg:w="64"/><text x="4.6160%" y="302.50"></text></g><g><title>find_top_boxed_args (autograd/tracer.py:70) (86 samples, 0.15%)</title><rect x="4.7665%" y="308" width="0.1491%" height="15" fill="rgb(233,36,39)" fg:x="2749" fg:w="86"/><text x="5.0165%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (196 samples, 0.34%)</title><rect x="4.5983%" y="292" width="0.3398%" height="15" fill="rgb(226,3,54)" fg:x="2652" fg:w="196"/><text x="4.8483%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (204 samples, 0.35%)</title><rect x="4.9434%" y="292" width="0.3537%" height="15" fill="rgb(245,192,40)" fg:x="2851" fg:w="204"/><text x="5.1934%" y="302.50"></text></g><g><title>untake (autograd/numpy/numpy_vjps.py:700) (87 samples, 0.15%)</title><rect x="5.1463%" y="308" width="0.1509%" height="15" fill="rgb(238,167,29)" fg:x="2968" fg:w="87"/><text x="5.3963%" y="318.50"></text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;:5) (119 samples, 0.21%)</title><rect x="5.5988%" y="324" width="0.2063%" height="15" fill="rgb(232,182,51)" fg:x="3229" fg:w="119"/><text x="5.8488%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:58) (230 samples, 0.40%)</title><rect x="5.4081%" y="308" width="0.3988%" height="15" fill="rgb(231,60,39)" fg:x="3119" fg:w="230"/><text x="5.6581%" y="318.50"></text></g><g><title>__init__ (autograd/numpy/numpy_vspaces.py:6) (66 samples, 0.11%)</title><rect x="5.8918%" y="324" width="0.1144%" height="15" fill="rgb(208,69,12)" fg:x="3398" fg:w="66"/><text x="6.1418%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:701) (938 samples, 1.63%)</title><rect x="4.4839%" y="276" width="1.6264%" height="15" fill="rgb(235,93,37)" fg:x="2586" fg:w="938"/><text x="4.7339%" y="286.50"></text></g><g><title>vspace (autograd/core.py:233) (461 samples, 0.80%)</title><rect x="5.3110%" y="292" width="0.7993%" height="15" fill="rgb(213,116,39)" fg:x="3063" fg:w="461"/><text x="5.5610%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:59) (175 samples, 0.30%)</title><rect x="5.8069%" y="308" width="0.3034%" height="15" fill="rgb(222,207,29)" fg:x="3349" fg:w="175"/><text x="6.0569%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:82) (192 samples, 0.33%)</title><rect x="6.1103%" y="276" width="0.3329%" height="15" fill="rgb(206,96,30)" fg:x="3524" fg:w="192"/><text x="6.3603%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (135 samples, 0.23%)</title><rect x="6.2091%" y="292" width="0.2341%" height="15" fill="rgb(218,138,4)" fg:x="3581" fg:w="135"/><text x="6.4591%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (1,913 samples, 3.32%)</title><rect x="3.4123%" y="260" width="3.3170%" height="15" fill="rgb(250,191,14)" fg:x="1968" fg:w="1913"/><text x="3.6623%" y="270.50">&lt;la..</text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:83) (165 samples, 0.29%)</title><rect x="6.4432%" y="276" width="0.2861%" height="15" fill="rgb(239,60,40)" fg:x="3716" fg:w="165"/><text x="6.6932%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (113 samples, 0.20%)</title><rect x="6.5334%" y="292" width="0.1959%" height="15" fill="rgb(206,27,48)" fg:x="3768" fg:w="113"/><text x="6.7834%" y="302.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:5) (155 samples, 0.27%)</title><rect x="7.3761%" y="324" width="0.2688%" height="15" fill="rgb(225,35,8)" fg:x="4254" fg:w="155"/><text x="7.6261%" y="334.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:649) (413 samples, 0.72%)</title><rect x="6.9357%" y="292" width="0.7161%" height="15" fill="rgb(250,213,24)" fg:x="4000" fg:w="413"/><text x="7.1857%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (307 samples, 0.53%)</title><rect x="7.1194%" y="308" width="0.5323%" height="15" fill="rgb(247,123,22)" fg:x="4106" fg:w="307"/><text x="7.3694%" y="318.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:651) (64 samples, 0.11%)</title><rect x="7.6518%" y="292" width="0.1110%" height="15" fill="rgb(231,138,38)" fg:x="4413" fg:w="64"/><text x="7.9018%" y="302.50"></text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;:5) (201 samples, 0.35%)</title><rect x="8.1685%" y="324" width="0.3485%" height="15" fill="rgb(231,145,46)" fg:x="4711" fg:w="201"/><text x="8.4185%" y="334.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:654) (432 samples, 0.75%)</title><rect x="7.7714%" y="292" width="0.7491%" height="15" fill="rgb(251,118,11)" fg:x="4482" fg:w="432"/><text x="8.0214%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (350 samples, 0.61%)</title><rect x="7.9136%" y="308" width="0.6069%" height="15" fill="rgb(217,147,25)" fg:x="4564" fg:w="350"/><text x="8.1636%" y="318.50"></text></g><g><title>backward_pass (autograd/core.py:21) (3,152 samples, 5.47%)</title><rect x="3.0586%" y="244" width="5.4653%" height="15" fill="rgb(247,81,37)" fg:x="1764" fg:w="3152"/><text x="3.3086%" y="254.50">backwar..</text></g><g><title>&lt;lambda&gt; (autograd/core.py:78) (1,035 samples, 1.79%)</title><rect x="6.7293%" y="260" width="1.7946%" height="15" fill="rgb(209,12,38)" fg:x="3881" fg:w="1035"/><text x="6.9793%" y="270.50">&lt;..</text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (1,004 samples, 1.74%)</title><rect x="6.7831%" y="276" width="1.7408%" height="15" fill="rgb(227,1,9)" fg:x="3912" fg:w="1004"/><text x="7.0331%" y="286.50"></text></g><g><title>backward_pass (autograd/core.py:22) (320 samples, 0.55%)</title><rect x="8.5239%" y="244" width="0.5549%" height="15" fill="rgb(248,47,43)" fg:x="4916" fg:w="320"/><text x="8.7739%" y="254.50"></text></g><g><title>add_outgrads (autograd/core.py:159) (85 samples, 0.15%)</title><rect x="9.4273%" y="260" width="0.1474%" height="15" fill="rgb(221,10,30)" fg:x="5437" fg:w="85"/><text x="9.6773%" y="270.50"></text></g><g><title>add_outgrads (autograd/core.py:161) (61 samples, 0.11%)</title><rect x="9.5989%" y="260" width="0.1058%" height="15" fill="rgb(210,229,1)" fg:x="5536" fg:w="61"/><text x="9.8489%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (121 samples, 0.21%)</title><rect x="9.7949%" y="276" width="0.2098%" height="15" fill="rgb(222,148,37)" fg:x="5649" fg:w="121"/><text x="10.0449%" y="286.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (639 samples, 1.11%)</title><rect x="10.0914%" y="308" width="1.1080%" height="15" fill="rgb(234,67,33)" fg:x="5820" fg:w="639"/><text x="10.3414%" y="318.50"></text></g><g><title>add_outgrads (autograd/core.py:165) (858 samples, 1.49%)</title><rect x="9.7151%" y="260" width="1.4877%" height="15" fill="rgb(247,98,35)" fg:x="5603" fg:w="858"/><text x="9.9651%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (688 samples, 1.19%)</title><rect x="10.0099%" y="276" width="1.1929%" height="15" fill="rgb(247,138,52)" fg:x="5773" fg:w="688"/><text x="10.2599%" y="286.50"></text></g><g><title>sparse_add (autograd/core.py:186) (658 samples, 1.14%)</title><rect x="10.0619%" y="292" width="1.1409%" height="15" fill="rgb(213,79,30)" fg:x="5803" fg:w="658"/><text x="10.3119%" y="302.50"></text></g><g><title>add_outgrads (autograd/core.py:170) (187 samples, 0.32%)</title><rect x="11.2045%" y="260" width="0.3242%" height="15" fill="rgb(246,177,23)" fg:x="6462" fg:w="187"/><text x="11.4545%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (140 samples, 0.24%)</title><rect x="11.2860%" y="276" width="0.2427%" height="15" fill="rgb(230,62,27)" fg:x="6509" fg:w="140"/><text x="11.5360%" y="286.50"></text></g><g><title>mut_add (autograd/core.py:202) (95 samples, 0.16%)</title><rect x="11.3641%" y="292" width="0.1647%" height="15" fill="rgb(216,154,8)" fg:x="6554" fg:w="95"/><text x="11.6141%" y="302.50"></text></g><g><title>_mut_add (autograd/core.py:213) (90 samples, 0.16%)</title><rect x="11.3727%" y="308" width="0.1561%" height="15" fill="rgb(244,35,45)" fg:x="6559" fg:w="90"/><text x="11.6227%" y="318.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (251 samples, 0.44%)</title><rect x="11.6554%" y="308" width="0.4352%" height="15" fill="rgb(251,115,12)" fg:x="6722" fg:w="251"/><text x="11.9054%" y="318.50"></text></g><g><title>add_outgrads (autograd/core.py:171) (325 samples, 0.56%)</title><rect x="11.5288%" y="260" width="0.5635%" height="15" fill="rgb(240,54,50)" fg:x="6649" fg:w="325"/><text x="11.7788%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (271 samples, 0.47%)</title><rect x="11.6224%" y="276" width="0.4699%" height="15" fill="rgb(233,84,52)" fg:x="6703" fg:w="271"/><text x="11.8724%" y="286.50"></text></g><g><title>sparse_add (autograd/core.py:186) (262 samples, 0.45%)</title><rect x="11.6380%" y="292" width="0.4543%" height="15" fill="rgb(207,117,47)" fg:x="6712" fg:w="262"/><text x="11.8880%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (75 samples, 0.13%)</title><rect x="12.1270%" y="276" width="0.1300%" height="15" fill="rgb(249,43,39)" fg:x="6994" fg:w="75"/><text x="12.3770%" y="286.50"></text></g><g><title>sparse_add (autograd/core.py:186) (63 samples, 0.11%)</title><rect x="12.1478%" y="292" width="0.1092%" height="15" fill="rgb(209,38,44)" fg:x="7006" fg:w="63"/><text x="12.3978%" y="302.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (62 samples, 0.11%)</title><rect x="12.1495%" y="308" width="0.1075%" height="15" fill="rgb(236,212,23)" fg:x="7007" fg:w="62"/><text x="12.3995%" y="318.50"></text></g><g><title>add_outgrads (autograd/core.py:176) (92 samples, 0.16%)</title><rect x="12.1010%" y="260" width="0.1595%" height="15" fill="rgb(242,79,21)" fg:x="6979" fg:w="92"/><text x="12.3510%" y="270.50"></text></g><g><title>stack (autograd/numpy/numpy_wrapper.py:88) (6,237 samples, 10.81%)</title><rect x="1.4721%" y="196" width="10.8144%" height="15" fill="rgb(211,96,35)" fg:x="849" fg:w="6237"/><text x="1.7221%" y="206.50">stack (autograd/..</text></g><g><title>&lt;listcomp&gt; (autograd/numpy/numpy_wrapper.py:88) (6,237 samples, 10.81%)</title><rect x="1.4721%" y="212" width="10.8144%" height="15" fill="rgb(253,215,40)" fg:x="849" fg:w="6237"/><text x="1.7221%" y="222.50">&lt;listcomp&gt; (auto..</text></g><g><title>vjp (autograd/core.py:14) (6,052 samples, 10.49%)</title><rect x="1.7929%" y="228" width="10.4936%" height="15" fill="rgb(211,81,21)" fg:x="1034" fg:w="6052"/><text x="2.0429%" y="238.50">vjp (autograd/c..</text></g><g><title>backward_pass (autograd/core.py:23) (1,850 samples, 3.21%)</title><rect x="9.0788%" y="244" width="3.2077%" height="15" fill="rgb(208,190,38)" fg:x="5236" fg:w="1850"/><text x="9.3288%" y="254.50">bac..</text></g><g><title>nary_f (autograd/wrap_util.py:20) (7,051 samples, 12.23%)</title><rect x="0.0711%" y="164" width="12.2258%" height="15" fill="rgb(235,213,38)" fg:x="41" fg:w="7051"/><text x="0.3211%" y="174.50">nary_f (autograd/w..</text></g><g><title>jacobian (autograd/differential_operators.py:61) (6,267 samples, 10.87%)</title><rect x="1.4305%" y="180" width="10.8664%" height="15" fill="rgb(237,122,38)" fg:x="825" fg:w="6267"/><text x="1.6805%" y="190.50">jacobian (autogr..</text></g><g><title>f_x (3_agents_Simulation_decentralized.py:211) (7,068 samples, 12.26%)</title><rect x="0.0642%" y="148" width="12.2553%" height="15" fill="rgb(244,218,35)" fg:x="37" fg:w="7068"/><text x="0.3142%" y="158.50">f_x (3_agents_Simu..</text></g><g><title>compute_pairwise_distance (3_agents_Simulation_decentralized.py:117) (68 samples, 0.12%)</title><rect x="12.5605%" y="276" width="0.1179%" height="15" fill="rgb(240,68,47)" fg:x="7244" fg:w="68"/><text x="12.8105%" y="286.50"></text></g><g><title>cost_avoidance (3_agents_Simulation_decentralized.py:134) (216 samples, 0.37%)</title><rect x="12.3836%" y="260" width="0.3745%" height="15" fill="rgb(210,16,53)" fg:x="7142" fg:w="216"/><text x="12.6336%" y="270.50"></text></g><g><title>cost_stage (3_agents_Simulation_decentralized.py:143) (327 samples, 0.57%)</title><rect x="12.3836%" y="244" width="0.5670%" height="15" fill="rgb(235,124,12)" fg:x="7142" fg:w="327"/><text x="12.6336%" y="254.50"></text></g><g><title>cost_avoidance (3_agents_Simulation_decentralized.py:136) (111 samples, 0.19%)</title><rect x="12.7581%" y="260" width="0.1925%" height="15" fill="rgb(224,169,11)" fg:x="7358" fg:w="111"/><text x="13.0081%" y="270.50"></text></g><g><title>cost_stage (3_agents_Simulation_decentralized.py:144) (159 samples, 0.28%)</title><rect x="12.9506%" y="244" width="0.2757%" height="15" fill="rgb(250,166,2)" fg:x="7469" fg:w="159"/><text x="13.2006%" y="254.50"></text></g><g><title>cost_trj (3_agents_Simulation_decentralized.py:92) (118 samples, 0.20%)</title><rect x="13.0217%" y="260" width="0.2046%" height="15" fill="rgb(242,216,29)" fg:x="7510" fg:w="118"/><text x="13.2717%" y="270.50"></text></g><g><title>trace (autograd/tracer.py:10) (518 samples, 0.90%)</title><rect x="12.3767%" y="212" width="0.8982%" height="15" fill="rgb(230,116,27)" fg:x="7138" fg:w="518"/><text x="12.6267%" y="222.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (514 samples, 0.89%)</title><rect x="12.3836%" y="228" width="0.8912%" height="15" fill="rgb(228,99,48)" fg:x="7142" fg:w="514"/><text x="12.6336%" y="238.50"></text></g><g><title>make_vjp (autograd/core.py:10) (537 samples, 0.93%)</title><rect x="12.3767%" y="196" width="0.9311%" height="15" fill="rgb(253,11,6)" fg:x="7138" fg:w="537"/><text x="12.6267%" y="206.50"></text></g><g><title>elementwise_grad (autograd/differential_operators.py:38) (539 samples, 0.93%)</title><rect x="12.3749%" y="180" width="0.9346%" height="15" fill="rgb(247,143,39)" fg:x="7137" fg:w="539"/><text x="12.6249%" y="190.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (194 samples, 0.34%)</title><rect x="13.3962%" y="228" width="0.3364%" height="15" fill="rgb(236,97,10)" fg:x="7726" fg:w="194"/><text x="13.6462%" y="238.50"></text></g><g><title>backward_pass (autograd/core.py:21) (264 samples, 0.46%)</title><rect x="13.3910%" y="212" width="0.4578%" height="15" fill="rgb(233,208,19)" fg:x="7723" fg:w="264"/><text x="13.6410%" y="222.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:78) (67 samples, 0.12%)</title><rect x="13.7326%" y="228" width="0.1162%" height="15" fill="rgb(216,164,2)" fg:x="7920" fg:w="67"/><text x="13.9826%" y="238.50"></text></g><g><title>vjp (autograd/core.py:14) (389 samples, 0.67%)</title><rect x="13.3269%" y="196" width="0.6745%" height="15" fill="rgb(220,129,5)" fg:x="7686" fg:w="389"/><text x="13.5769%" y="206.50"></text></g><g><title>backward_pass (autograd/core.py:23) (71 samples, 0.12%)</title><rect x="13.8782%" y="212" width="0.1231%" height="15" fill="rgb(242,17,10)" fg:x="8004" fg:w="71"/><text x="14.1282%" y="222.50"></text></g><g><title>nary_f (autograd/wrap_util.py:20) (961 samples, 1.67%)</title><rect x="12.3403%" y="164" width="1.6663%" height="15" fill="rgb(242,107,0)" fg:x="7117" fg:w="961"/><text x="12.5903%" y="174.50"></text></g><g><title>elementwise_grad (autograd/differential_operators.py:41) (399 samples, 0.69%)</title><rect x="13.3147%" y="180" width="0.6918%" height="15" fill="rgb(251,28,31)" fg:x="7679" fg:w="399"/><text x="13.5647%" y="190.50"></text></g><g><title>Q_terms (3_agents_Simulation_decentralized.py:239) (8,073 samples, 14.00%)</title><rect x="0.0381%" y="132" width="13.9979%" height="15" fill="rgb(233,223,10)" fg:x="22" fg:w="8073"/><text x="0.2881%" y="142.50">Q_terms (3_agents_Sim..</text></g><g><title>l_x (3_agents_Simulation_decentralized.py:170) (990 samples, 1.72%)</title><rect x="12.3195%" y="148" width="1.7166%" height="15" fill="rgb(215,21,27)" fg:x="7105" fg:w="990"/><text x="12.5695%" y="158.50"></text></g><g><title>discrete_dynamics_multiple (3_agents_Simulation_decentralized.py:57) (67 samples, 0.12%)</title><rect x="14.0950%" y="260" width="0.1162%" height="15" fill="rgb(232,23,21)" fg:x="8129" fg:w="67"/><text x="14.3450%" y="270.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:60) (82 samples, 0.14%)</title><rect x="14.5579%" y="340" width="0.1422%" height="15" fill="rgb(244,5,23)" fg:x="8396" fg:w="82"/><text x="14.8079%" y="350.50"></text></g><g><title>unicycle_continuous_dynamics (3_agents_Simulation_decentralized.py:32) (152 samples, 0.26%)</title><rect x="14.5146%" y="308" width="0.2636%" height="15" fill="rgb(226,81,46)" fg:x="8371" fg:w="152"/><text x="14.7646%" y="318.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (147 samples, 0.25%)</title><rect x="14.5233%" y="324" width="0.2549%" height="15" fill="rgb(247,70,30)" fg:x="8376" fg:w="147"/><text x="14.7733%" y="334.50"></text></g><g><title>discrete_dynamics (3_agents_Simulation_decentralized.py:47) (321 samples, 0.56%)</title><rect x="14.2233%" y="292" width="0.5566%" height="15" fill="rgb(212,68,19)" fg:x="8203" fg:w="321"/><text x="14.4733%" y="302.50"></text></g><g><title>trace (autograd/tracer.py:10) (428 samples, 0.74%)</title><rect x="14.0898%" y="212" width="0.7421%" height="15" fill="rgb(240,187,13)" fg:x="8126" fg:w="428"/><text x="14.3398%" y="222.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (425 samples, 0.74%)</title><rect x="14.0950%" y="228" width="0.7369%" height="15" fill="rgb(223,113,26)" fg:x="8129" fg:w="425"/><text x="14.3450%" y="238.50"></text></g><g><title>f (3_agents_Simulation_decentralized.py:207) (425 samples, 0.74%)</title><rect x="14.0950%" y="244" width="0.7369%" height="15" fill="rgb(206,192,2)" fg:x="8129" fg:w="425"/><text x="14.3450%" y="254.50"></text></g><g><title>discrete_dynamics_multiple (3_agents_Simulation_decentralized.py:58) (358 samples, 0.62%)</title><rect x="14.2112%" y="260" width="0.6207%" height="15" fill="rgb(241,108,4)" fg:x="8196" fg:w="358"/><text x="14.4612%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (3_agents_Simulation_decentralized.py:58) (358 samples, 0.62%)</title><rect x="14.2112%" y="276" width="0.6207%" height="15" fill="rgb(247,173,49)" fg:x="8196" fg:w="358"/><text x="14.4612%" y="286.50"></text></g><g><title>make_vjp (autograd/core.py:10) (437 samples, 0.76%)</title><rect x="14.0898%" y="196" width="0.7577%" height="15" fill="rgb(224,114,35)" fg:x="8126" fg:w="437"/><text x="14.3398%" y="206.50"></text></g><g><title>jacobian (autograd/differential_operators.py:57) (443 samples, 0.77%)</title><rect x="14.0863%" y="180" width="0.7681%" height="15" fill="rgb(245,159,27)" fg:x="8124" fg:w="443"/><text x="14.3363%" y="190.50"></text></g><g><title>standard_basis (autograd/numpy/numpy_vspaces.py:18) (62 samples, 0.11%)</title><rect x="15.0209%" y="228" width="0.1075%" height="15" fill="rgb(245,172,44)" fg:x="8663" fg:w="62"/><text x="15.2709%" y="238.50"></text></g><g><title>toposort (autograd/util.py:29) (60 samples, 0.10%)</title><rect x="15.4128%" y="260" width="0.1040%" height="15" fill="rgb(236,23,11)" fg:x="8889" fg:w="60"/><text x="15.6628%" y="270.50"></text></g><g><title>toposort (autograd/util.py:35) (70 samples, 0.12%)</title><rect x="15.6191%" y="260" width="0.1214%" height="15" fill="rgb(205,117,38)" fg:x="9008" fg:w="70"/><text x="15.8691%" y="270.50"></text></g><g><title>backward_pass (autograd/core.py:19) (426 samples, 0.74%)</title><rect x="15.1856%" y="244" width="0.7386%" height="15" fill="rgb(237,72,25)" fg:x="8758" fg:w="426"/><text x="15.4356%" y="254.50"></text></g><g><title>reshape (&lt;__array_function__ internals&gt;:5) (84 samples, 0.15%)</title><rect x="16.4635%" y="308" width="0.1456%" height="15" fill="rgb(244,70,9)" fg:x="9495" fg:w="84"/><text x="16.7135%" y="318.50"></text></g><g><title>reshape (numpy/core/fromnumeric.py:298) (69 samples, 0.12%)</title><rect x="16.4895%" y="324" width="0.1196%" height="15" fill="rgb(217,125,39)" fg:x="9510" fg:w="69"/><text x="16.7395%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (105 samples, 0.18%)</title><rect x="16.4288%" y="292" width="0.1821%" height="15" fill="rgb(235,36,10)" fg:x="9475" fg:w="105"/><text x="16.6788%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:582) (247 samples, 0.43%)</title><rect x="16.3092%" y="276" width="0.4283%" height="15" fill="rgb(251,123,47)" fg:x="9406" fg:w="247"/><text x="16.5592%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (64 samples, 0.11%)</title><rect x="16.6265%" y="292" width="0.1110%" height="15" fill="rgb(221,13,13)" fg:x="9589" fg:w="64"/><text x="16.8765%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:35) (89 samples, 0.15%)</title><rect x="16.7739%" y="292" width="0.1543%" height="15" fill="rgb(238,131,9)" fg:x="9674" fg:w="89"/><text x="17.0239%" y="302.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:649) (139 samples, 0.24%)</title><rect x="16.9351%" y="292" width="0.2410%" height="15" fill="rgb(211,50,8)" fg:x="9767" fg:w="139"/><text x="17.1851%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (106 samples, 0.18%)</title><rect x="16.9924%" y="308" width="0.1838%" height="15" fill="rgb(245,182,24)" fg:x="9800" fg:w="106"/><text x="17.2424%" y="318.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:654) (107 samples, 0.19%)</title><rect x="17.2212%" y="292" width="0.1855%" height="15" fill="rgb(242,14,37)" fg:x="9932" fg:w="107"/><text x="17.4712%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (85 samples, 0.15%)</title><rect x="17.2594%" y="308" width="0.1474%" height="15" fill="rgb(246,228,12)" fg:x="9954" fg:w="85"/><text x="17.5094%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (389 samples, 0.67%)</title><rect x="16.7375%" y="276" width="0.6745%" height="15" fill="rgb(213,55,15)" fg:x="9653" fg:w="389"/><text x="16.9875%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (116 samples, 0.20%)</title><rect x="17.4865%" y="292" width="0.2011%" height="15" fill="rgb(209,9,3)" fg:x="10085" fg:w="116"/><text x="17.7365%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (98 samples, 0.17%)</title><rect x="17.6911%" y="292" width="0.1699%" height="15" fill="rgb(230,59,30)" fg:x="10203" fg:w="98"/><text x="17.9411%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:58) (118 samples, 0.20%)</title><rect x="17.9321%" y="308" width="0.2046%" height="15" fill="rgb(209,121,21)" fg:x="10342" fg:w="118"/><text x="18.1821%" y="318.50"></text></g><g><title>backward_pass (autograd/core.py:21) (1,316 samples, 2.28%)</title><rect x="16.0231%" y="244" width="2.2818%" height="15" fill="rgb(220,109,13)" fg:x="9241" fg:w="1316"/><text x="16.2731%" y="254.50">b..</text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (1,189 samples, 2.06%)</title><rect x="16.2433%" y="260" width="2.0616%" height="15" fill="rgb(232,18,1)" fg:x="9368" fg:w="1189"/><text x="16.4933%" y="270.50">&lt;..</text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:701) (515 samples, 0.89%)</title><rect x="17.4120%" y="276" width="0.8930%" height="15" fill="rgb(215,41,42)" fg:x="10042" fg:w="515"/><text x="17.6620%" y="286.50"></text></g><g><title>vspace (autograd/core.py:233) (255 samples, 0.44%)</title><rect x="17.8628%" y="292" width="0.4421%" height="15" fill="rgb(224,123,36)" fg:x="10302" fg:w="255"/><text x="18.1128%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:59) (97 samples, 0.17%)</title><rect x="18.1367%" y="308" width="0.1682%" height="15" fill="rgb(240,125,3)" fg:x="10460" fg:w="97"/><text x="18.3867%" y="318.50"></text></g><g><title>backward_pass (autograd/core.py:22) (216 samples, 0.37%)</title><rect x="18.3049%" y="244" width="0.3745%" height="15" fill="rgb(205,98,50)" fg:x="10557" fg:w="216"/><text x="18.5549%" y="254.50"></text></g><g><title>add_outgrads (autograd/core.py:165) (399 samples, 0.69%)</title><rect x="19.0540%" y="260" width="0.6918%" height="15" fill="rgb(205,185,37)" fg:x="10989" fg:w="399"/><text x="19.3040%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (325 samples, 0.56%)</title><rect x="19.1823%" y="276" width="0.5635%" height="15" fill="rgb(238,207,15)" fg:x="11063" fg:w="325"/><text x="19.4323%" y="286.50"></text></g><g><title>sparse_add (autograd/core.py:186) (314 samples, 0.54%)</title><rect x="19.2014%" y="292" width="0.5444%" height="15" fill="rgb(213,199,42)" fg:x="11074" fg:w="314"/><text x="19.4514%" y="302.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (307 samples, 0.53%)</title><rect x="19.2135%" y="308" width="0.5323%" height="15" fill="rgb(235,201,11)" fg:x="11081" fg:w="307"/><text x="19.4635%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (373 samples, 0.65%)</title><rect x="19.8377%" y="276" width="0.6467%" height="15" fill="rgb(207,46,11)" fg:x="11441" fg:w="373"/><text x="20.0877%" y="286.50"></text></g><g><title>sparse_add (autograd/core.py:186) (319 samples, 0.55%)</title><rect x="19.9313%" y="292" width="0.5531%" height="15" fill="rgb(241,35,35)" fg:x="11495" fg:w="319"/><text x="20.1813%" y="302.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (306 samples, 0.53%)</title><rect x="19.9539%" y="308" width="0.5306%" height="15" fill="rgb(243,32,47)" fg:x="11508" fg:w="306"/><text x="20.2039%" y="318.50"></text></g><g><title>add_outgrads (autograd/core.py:176) (437 samples, 0.76%)</title><rect x="19.7493%" y="260" width="0.7577%" height="15" fill="rgb(247,202,23)" fg:x="11390" fg:w="437"/><text x="19.9993%" y="270.50"></text></g><g><title>stack (autograd/numpy/numpy_wrapper.py:88) (3,244 samples, 5.62%)</title><rect x="14.9030%" y="196" width="5.6248%" height="15" fill="rgb(219,102,11)" fg:x="8595" fg:w="3244"/><text x="15.1530%" y="206.50">stack (..</text></g><g><title>&lt;listcomp&gt; (autograd/numpy/numpy_wrapper.py:88) (3,244 samples, 5.62%)</title><rect x="14.9030%" y="212" width="5.6248%" height="15" fill="rgb(243,110,44)" fg:x="8595" fg:w="3244"/><text x="15.1530%" y="222.50">&lt;listco..</text></g><g><title>vjp (autograd/core.py:14) (3,095 samples, 5.37%)</title><rect x="15.1613%" y="228" width="5.3665%" height="15" fill="rgb(222,74,54)" fg:x="8744" fg:w="3095"/><text x="15.4113%" y="238.50">vjp (au..</text></g><g><title>backward_pass (autograd/core.py:23) (1,066 samples, 1.85%)</title><rect x="18.6795%" y="244" width="1.8484%" height="15" fill="rgb(216,99,12)" fg:x="10773" fg:w="1066"/><text x="18.9295%" y="254.50">b..</text></g><g><title>nary_f (autograd/wrap_util.py:20) (3,733 samples, 6.47%)</title><rect x="14.0620%" y="164" width="6.4727%" height="15" fill="rgb(226,22,26)" fg:x="8110" fg:w="3733"/><text x="14.3120%" y="174.50">nary_f (..</text></g><g><title>jacobian (autograd/differential_operators.py:61) (3,264 samples, 5.66%)</title><rect x="14.8752%" y="180" width="5.6595%" height="15" fill="rgb(217,163,10)" fg:x="8579" fg:w="3264"/><text x="15.1252%" y="190.50">jacobia..</text></g><g><title>f_u (3_agents_Simulation_decentralized.py:217) (3,747 samples, 6.50%)</title><rect x="14.0534%" y="148" width="6.4970%" height="15" fill="rgb(213,25,53)" fg:x="8105" fg:w="3747"/><text x="14.3034%" y="158.50">f_u (3_ag..</text></g><g><title>cost_avoidance (3_agents_Simulation_decentralized.py:134) (78 samples, 0.14%)</title><rect x="20.5798%" y="260" width="0.1352%" height="15" fill="rgb(252,105,26)" fg:x="11869" fg:w="78"/><text x="20.8298%" y="270.50"></text></g><g><title>cost_stage (3_agents_Simulation_decentralized.py:143) (111 samples, 0.19%)</title><rect x="20.5781%" y="244" width="0.1925%" height="15" fill="rgb(220,39,43)" fg:x="11868" fg:w="111"/><text x="20.8281%" y="254.50"></text></g><g><title>__matmul__ (autograd/numpy/numpy_boxes.py:32) (58 samples, 0.10%)</title><rect x="20.8902%" y="276" width="0.1006%" height="15" fill="rgb(229,68,48)" fg:x="12048" fg:w="58"/><text x="21.1402%" y="286.50"></text></g><g><title>cost_stage (3_agents_Simulation_decentralized.py:144) (141 samples, 0.24%)</title><rect x="20.7706%" y="244" width="0.2445%" height="15" fill="rgb(252,8,32)" fg:x="11979" fg:w="141"/><text x="21.0206%" y="254.50"></text></g><g><title>cost_trj (3_agents_Simulation_decentralized.py:92) (109 samples, 0.19%)</title><rect x="20.8260%" y="260" width="0.1890%" height="15" fill="rgb(223,20,43)" fg:x="12011" fg:w="109"/><text x="21.0760%" y="270.50"></text></g><g><title>trace (autograd/tracer.py:10) (286 samples, 0.50%)</title><rect x="20.5729%" y="212" width="0.4959%" height="15" fill="rgb(229,81,49)" fg:x="11865" fg:w="286"/><text x="20.8229%" y="222.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (283 samples, 0.49%)</title><rect x="20.5781%" y="228" width="0.4907%" height="15" fill="rgb(236,28,36)" fg:x="11868" fg:w="283"/><text x="20.8281%" y="238.50"></text></g><g><title>make_vjp (autograd/core.py:10) (296 samples, 0.51%)</title><rect x="20.5694%" y="196" width="0.5132%" height="15" fill="rgb(249,185,26)" fg:x="11863" fg:w="296"/><text x="20.8194%" y="206.50"></text></g><g><title>elementwise_grad (autograd/differential_operators.py:38) (301 samples, 0.52%)</title><rect x="20.5677%" y="180" width="0.5219%" height="15" fill="rgb(249,174,33)" fg:x="11862" fg:w="301"/><text x="20.8177%" y="190.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (63 samples, 0.11%)</title><rect x="21.1243%" y="228" width="0.1092%" height="15" fill="rgb(233,201,37)" fg:x="12183" fg:w="63"/><text x="21.3743%" y="238.50"></text></g><g><title>backward_pass (autograd/core.py:21) (79 samples, 0.14%)</title><rect x="21.1225%" y="212" width="0.1370%" height="15" fill="rgb(221,78,26)" fg:x="12182" fg:w="79"/><text x="21.3725%" y="222.50"></text></g><g><title>nary_f (autograd/wrap_util.py:20) (413 samples, 0.72%)</title><rect x="20.5607%" y="164" width="0.7161%" height="15" fill="rgb(250,127,30)" fg:x="11858" fg:w="413"/><text x="20.8107%" y="174.50"></text></g><g><title>elementwise_grad (autograd/differential_operators.py:41) (105 samples, 0.18%)</title><rect x="21.0948%" y="180" width="0.1821%" height="15" fill="rgb(230,49,44)" fg:x="12166" fg:w="105"/><text x="21.3448%" y="190.50"></text></g><g><title>vjp (autograd/core.py:14) (96 samples, 0.17%)</title><rect x="21.1104%" y="196" width="0.1665%" height="15" fill="rgb(229,67,23)" fg:x="12175" fg:w="96"/><text x="21.3604%" y="206.50"></text></g><g><title>Q_terms (3_agents_Simulation_decentralized.py:241) (4,195 samples, 7.27%)</title><rect x="14.0360%" y="132" width="7.2738%" height="15" fill="rgb(249,83,47)" fg:x="8095" fg:w="4195"/><text x="14.2860%" y="142.50">Q_terms (3..</text></g><g><title>l_u (3_agents_Simulation_decentralized.py:175) (438 samples, 0.76%)</title><rect x="20.5503%" y="148" width="0.7595%" height="15" fill="rgb(215,43,3)" fg:x="11852" fg:w="438"/><text x="20.8003%" y="158.50"></text></g><g><title>discrete_dynamics_multiple (3_agents_Simulation_decentralized.py:57) (122 samples, 0.21%)</title><rect x="21.4884%" y="260" width="0.2115%" height="15" fill="rgb(238,154,13)" fg:x="12393" fg:w="122"/><text x="21.7384%" y="270.50"></text></g><g><title>hstack (autograd/numpy/numpy_wrapper.py:43) (62 samples, 0.11%)</title><rect x="21.5924%" y="276" width="0.1075%" height="15" fill="rgb(219,56,2)" fg:x="12453" fg:w="62"/><text x="21.8424%" y="286.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_wrapper.py:38) (61 samples, 0.11%)</title><rect x="21.5942%" y="292" width="0.1058%" height="15" fill="rgb(233,0,4)" fg:x="12454" fg:w="61"/><text x="21.8442%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (66 samples, 0.11%)</title><rect x="21.8300%" y="324" width="0.1144%" height="15" fill="rgb(235,30,7)" fg:x="12590" fg:w="66"/><text x="22.0800%" y="334.50"></text></g><g><title>__init__ (autograd/core.py:36) (63 samples, 0.11%)</title><rect x="21.8352%" y="340" width="0.1092%" height="15" fill="rgb(250,79,13)" fg:x="12593" fg:w="63"/><text x="22.0852%" y="350.50"></text></g><g><title>__add__ (autograd/numpy/numpy_boxes.py:25) (122 samples, 0.21%)</title><rect x="21.7502%" y="308" width="0.2115%" height="15" fill="rgb(211,146,34)" fg:x="12544" fg:w="122"/><text x="22.0002%" y="318.50"></text></g><g><title>__rmul__ (autograd/numpy/numpy_boxes.py:35) (99 samples, 0.17%)</title><rect x="21.9617%" y="308" width="0.1717%" height="15" fill="rgb(228,22,38)" fg:x="12666" fg:w="99"/><text x="22.2117%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (107 samples, 0.19%)</title><rect x="22.2652%" y="340" width="0.1855%" height="15" fill="rgb(235,168,5)" fg:x="12841" fg:w="107"/><text x="22.5152%" y="350.50"></text></g><g><title>__init__ (autograd/core.py:36) (103 samples, 0.18%)</title><rect x="22.2721%" y="356" width="0.1786%" height="15" fill="rgb(221,155,16)" fg:x="12845" fg:w="103"/><text x="22.5221%" y="366.50"></text></g><g><title>__mul__ (autograd/numpy/numpy_boxes.py:27) (170 samples, 0.29%)</title><rect x="22.1681%" y="324" width="0.2948%" height="15" fill="rgb(215,215,53)" fg:x="12785" fg:w="170"/><text x="22.4181%" y="334.50"></text></g><g><title>unicycle_continuous_dynamics (3_agents_Simulation_decentralized.py:28) (311 samples, 0.54%)</title><rect x="22.1334%" y="308" width="0.5392%" height="15" fill="rgb(223,4,10)" fg:x="12765" fg:w="311"/><text x="22.3834%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (107 samples, 0.19%)</title><rect x="22.7940%" y="340" width="0.1855%" height="15" fill="rgb(234,103,6)" fg:x="13146" fg:w="107"/><text x="23.0440%" y="350.50"></text></g><g><title>__init__ (autograd/core.py:36) (102 samples, 0.18%)</title><rect x="22.8027%" y="356" width="0.1769%" height="15" fill="rgb(227,97,0)" fg:x="13151" fg:w="102"/><text x="23.0527%" y="366.50"></text></g><g><title>__mul__ (autograd/numpy/numpy_boxes.py:27) (168 samples, 0.29%)</title><rect x="22.6935%" y="324" width="0.2913%" height="15" fill="rgb(234,150,53)" fg:x="13088" fg:w="168"/><text x="22.9435%" y="334.50"></text></g><g><title>unicycle_continuous_dynamics (3_agents_Simulation_decentralized.py:29) (324 samples, 0.56%)</title><rect x="22.6727%" y="308" width="0.5618%" height="15" fill="rgb(228,201,54)" fg:x="13076" fg:w="324"/><text x="22.9227%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (66 samples, 0.11%)</title><rect x="23.5205%" y="356" width="0.1144%" height="15" fill="rgb(222,22,37)" fg:x="13565" fg:w="66"/><text x="23.7705%" y="366.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:60) (172 samples, 0.30%)</title><rect x="23.3576%" y="340" width="0.2982%" height="15" fill="rgb(237,53,32)" fg:x="13471" fg:w="172"/><text x="23.6076%" y="350.50"></text></g><g><title>unicycle_continuous_dynamics (3_agents_Simulation_decentralized.py:32) (328 samples, 0.57%)</title><rect x="23.2396%" y="308" width="0.5687%" height="15" fill="rgb(233,25,53)" fg:x="13403" fg:w="328"/><text x="23.4896%" y="318.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (308 samples, 0.53%)</title><rect x="23.2743%" y="324" width="0.5340%" height="15" fill="rgb(210,40,34)" fg:x="13423" fg:w="308"/><text x="23.5243%" y="334.50"></text></g><g><title>discrete_dynamics (3_agents_Simulation_decentralized.py:47) (1,199 samples, 2.08%)</title><rect x="21.7311%" y="292" width="2.0790%" height="15" fill="rgb(241,220,44)" fg:x="12533" fg:w="1199"/><text x="21.9811%" y="302.50">d..</text></g><g><title>trace (autograd/tracer.py:10) (1,413 samples, 2.45%)</title><rect x="21.4763%" y="212" width="2.4500%" height="15" fill="rgb(235,28,35)" fg:x="12386" fg:w="1413"/><text x="21.7263%" y="222.50">tr..</text></g><g><title>unary_f (autograd/wrap_util.py:15) (1,408 samples, 2.44%)</title><rect x="21.4849%" y="228" width="2.4414%" height="15" fill="rgb(210,56,17)" fg:x="12391" fg:w="1408"/><text x="21.7349%" y="238.50">un..</text></g><g><title>f (3_agents_Simulation_decentralized.py:207) (1,408 samples, 2.44%)</title><rect x="21.4849%" y="244" width="2.4414%" height="15" fill="rgb(224,130,29)" fg:x="12391" fg:w="1408"/><text x="21.7349%" y="254.50">f ..</text></g><g><title>discrete_dynamics_multiple (3_agents_Simulation_decentralized.py:58) (1,284 samples, 2.23%)</title><rect x="21.6999%" y="260" width="2.2263%" height="15" fill="rgb(235,212,8)" fg:x="12515" fg:w="1284"/><text x="21.9499%" y="270.50">d..</text></g><g><title>&lt;listcomp&gt; (3_agents_Simulation_decentralized.py:58) (1,280 samples, 2.22%)</title><rect x="21.7069%" y="276" width="2.2194%" height="15" fill="rgb(223,33,50)" fg:x="12519" fg:w="1280"/><text x="21.9569%" y="286.50">&lt;..</text></g><g><title>make_vjp (autograd/core.py:10) (1,430 samples, 2.48%)</title><rect x="21.4745%" y="196" width="2.4795%" height="15" fill="rgb(219,149,13)" fg:x="12385" fg:w="1430"/><text x="21.7245%" y="206.50">ma..</text></g><g><title>jacobian (autograd/differential_operators.py:57) (1,438 samples, 2.49%)</title><rect x="21.4711%" y="180" width="2.4934%" height="15" fill="rgb(250,156,29)" fg:x="12383" fg:w="1438"/><text x="21.7211%" y="190.50">ja..</text></g><g><title>array (autograd/numpy/numpy_wrapper.py:60) (65 samples, 0.11%)</title><rect x="24.2089%" y="228" width="0.1127%" height="15" fill="rgb(216,193,19)" fg:x="13962" fg:w="65"/><text x="24.4589%" y="238.50"></text></g><g><title>__init__ (numpy/lib/index_tricks.py:659) (59 samples, 0.10%)</title><rect x="24.3632%" y="244" width="0.1023%" height="15" fill="rgb(216,135,14)" fg:x="14051" fg:w="59"/><text x="24.6132%" y="254.50"></text></g><g><title>standard_basis (autograd/numpy/numpy_vspaces.py:18) (157 samples, 0.27%)</title><rect x="24.3216%" y="228" width="0.2722%" height="15" fill="rgb(241,47,5)" fg:x="14027" fg:w="157"/><text x="24.5716%" y="238.50"></text></g><g><title>toposort (autograd/util.py:24) (69 samples, 0.12%)</title><rect x="24.9129%" y="260" width="0.1196%" height="15" fill="rgb(233,42,35)" fg:x="14368" fg:w="69"/><text x="25.1629%" y="270.50"></text></g><g><title>toposort (autograd/util.py:25) (71 samples, 0.12%)</title><rect x="25.0325%" y="260" width="0.1231%" height="15" fill="rgb(231,13,6)" fg:x="14437" fg:w="71"/><text x="25.2825%" y="270.50"></text></g><g><title>toposort (autograd/util.py:28) (114 samples, 0.20%)</title><rect x="25.2024%" y="260" width="0.1977%" height="15" fill="rgb(207,181,40)" fg:x="14535" fg:w="114"/><text x="25.4524%" y="270.50"></text></g><g><title>toposort (autograd/util.py:29) (138 samples, 0.24%)</title><rect x="25.4001%" y="260" width="0.2393%" height="15" fill="rgb(254,173,49)" fg:x="14649" fg:w="138"/><text x="25.6501%" y="270.50"></text></g><g><title>toposort (autograd/util.py:33) (130 samples, 0.23%)</title><rect x="25.7001%" y="260" width="0.2254%" height="15" fill="rgb(221,1,38)" fg:x="14822" fg:w="130"/><text x="25.9501%" y="270.50"></text></g><g><title>toposort (autograd/util.py:35) (188 samples, 0.33%)</title><rect x="26.0035%" y="260" width="0.3260%" height="15" fill="rgb(206,124,46)" fg:x="14997" fg:w="188"/><text x="26.2535%" y="270.50"></text></g><g><title>toposort (autograd/util.py:36) (149 samples, 0.26%)</title><rect x="26.3295%" y="260" width="0.2584%" height="15" fill="rgb(249,21,11)" fg:x="15185" fg:w="149"/><text x="26.5795%" y="270.50"></text></g><g><title>toposort (autograd/util.py:37) (131 samples, 0.23%)</title><rect x="26.5878%" y="260" width="0.2271%" height="15" fill="rgb(222,201,40)" fg:x="15334" fg:w="131"/><text x="26.8378%" y="270.50"></text></g><g><title>backward_pass (autograd/core.py:19) (1,291 samples, 2.24%)</title><rect x="24.6944%" y="244" width="2.2385%" height="15" fill="rgb(235,61,29)" fg:x="14242" fg:w="1291"/><text x="24.9444%" y="254.50">b..</text></g><g><title>toposort (autograd/util.py:39) (68 samples, 0.12%)</title><rect x="26.8150%" y="260" width="0.1179%" height="15" fill="rgb(219,207,3)" fg:x="15465" fg:w="68"/><text x="27.0650%" y="270.50"></text></g><g><title>backward_pass (autograd/core.py:20) (145 samples, 0.25%)</title><rect x="26.9329%" y="244" width="0.2514%" height="15" fill="rgb(222,56,46)" fg:x="15533" fg:w="145"/><text x="27.1829%" y="254.50"></text></g><g><title>reshape (&lt;__array_function__ internals&gt;:5) (199 samples, 0.35%)</title><rect x="28.3963%" y="308" width="0.3450%" height="15" fill="rgb(239,76,54)" fg:x="16377" fg:w="199"/><text x="28.6463%" y="318.50"></text></g><g><title>reshape (numpy/core/fromnumeric.py:298) (187 samples, 0.32%)</title><rect x="28.4171%" y="324" width="0.3242%" height="15" fill="rgb(231,124,27)" fg:x="16389" fg:w="187"/><text x="28.6671%" y="334.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (118 samples, 0.20%)</title><rect x="28.5368%" y="340" width="0.2046%" height="15" fill="rgb(249,195,6)" fg:x="16458" fg:w="118"/><text x="28.7868%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (254 samples, 0.44%)</title><rect x="28.3061%" y="292" width="0.4404%" height="15" fill="rgb(237,174,47)" fg:x="16325" fg:w="254"/><text x="28.5561%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:582) (522 samples, 0.91%)</title><rect x="28.1189%" y="276" width="0.9051%" height="15" fill="rgb(206,201,31)" fg:x="16217" fg:w="522"/><text x="28.3689%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (147 samples, 0.25%)</title><rect x="28.7691%" y="292" width="0.2549%" height="15" fill="rgb(231,57,52)" fg:x="16592" fg:w="147"/><text x="29.0191%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:35) (222 samples, 0.38%)</title><rect x="29.0604%" y="292" width="0.3849%" height="15" fill="rgb(248,177,22)" fg:x="16760" fg:w="222"/><text x="29.3104%" y="302.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:649) (108 samples, 0.19%)</title><rect x="29.4557%" y="292" width="0.1873%" height="15" fill="rgb(215,211,37)" fg:x="16988" fg:w="108"/><text x="29.7057%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (74 samples, 0.13%)</title><rect x="29.5147%" y="308" width="0.1283%" height="15" fill="rgb(241,128,51)" fg:x="17022" fg:w="74"/><text x="29.7647%" y="318.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:654) (96 samples, 0.17%)</title><rect x="29.6881%" y="292" width="0.1665%" height="15" fill="rgb(227,165,31)" fg:x="17122" fg:w="96"/><text x="29.9381%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (74 samples, 0.13%)</title><rect x="29.7262%" y="308" width="0.1283%" height="15" fill="rgb(228,167,24)" fg:x="17144" fg:w="74"/><text x="29.9762%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (482 samples, 0.84%)</title><rect x="29.0240%" y="276" width="0.8357%" height="15" fill="rgb(228,143,12)" fg:x="16739" fg:w="482"/><text x="29.2740%" y="286.50"></text></g><g><title>find_top_boxed_args (autograd/tracer.py:69) (118 samples, 0.20%)</title><rect x="30.2343%" y="308" width="0.2046%" height="15" fill="rgb(249,149,8)" fg:x="17437" fg:w="118"/><text x="30.4843%" y="318.50"></text></g><g><title>find_top_boxed_args (autograd/tracer.py:70) (165 samples, 0.29%)</title><rect x="30.4389%" y="308" width="0.2861%" height="15" fill="rgb(243,35,44)" fg:x="17555" fg:w="165"/><text x="30.6889%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/tracer.py:123) (100 samples, 0.17%)</title><rect x="30.5516%" y="324" width="0.1734%" height="15" fill="rgb(246,89,9)" fg:x="17620" fg:w="100"/><text x="30.8016%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (370 samples, 0.64%)</title><rect x="30.1181%" y="292" width="0.6415%" height="15" fill="rgb(233,213,13)" fg:x="17370" fg:w="370"/><text x="30.3681%" y="302.50"></text></g><g><title>untake (autograd/numpy/numpy_vjps.py:695) (69 samples, 0.12%)</title><rect x="30.9261%" y="308" width="0.1196%" height="15" fill="rgb(233,141,41)" fg:x="17836" fg:w="69"/><text x="31.1761%" y="318.50"></text></g><g><title>untake (autograd/numpy/numpy_vjps.py:697) (71 samples, 0.12%)</title><rect x="31.0457%" y="308" width="0.1231%" height="15" fill="rgb(239,167,4)" fg:x="17905" fg:w="71"/><text x="31.2957%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (389 samples, 0.67%)</title><rect x="30.7752%" y="292" width="0.6745%" height="15" fill="rgb(209,217,16)" fg:x="17749" fg:w="389"/><text x="31.0252%" y="302.50"></text></g><g><title>untake (autograd/numpy/numpy_vjps.py:700) (162 samples, 0.28%)</title><rect x="31.1688%" y="308" width="0.2809%" height="15" fill="rgb(219,88,35)" fg:x="17976" fg:w="162"/><text x="31.4188%" y="318.50"></text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;:4) (90 samples, 0.16%)</title><rect x="31.9231%" y="324" width="0.1561%" height="15" fill="rgb(220,193,23)" fg:x="18411" fg:w="90"/><text x="32.1731%" y="334.50"></text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;:5) (278 samples, 0.48%)</title><rect x="32.0791%" y="324" width="0.4820%" height="15" fill="rgb(230,90,52)" fg:x="18501" fg:w="278"/><text x="32.3291%" y="334.50"></text></g><g><title>iscomplexobj (numpy/lib/type_check.py:341) (79 samples, 0.14%)</title><rect x="32.4242%" y="340" width="0.1370%" height="15" fill="rgb(252,106,19)" fg:x="18700" fg:w="79"/><text x="32.6742%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:58) (530 samples, 0.92%)</title><rect x="31.6578%" y="308" width="0.9190%" height="15" fill="rgb(206,74,20)" fg:x="18258" fg:w="530"/><text x="31.9078%" y="318.50"></text></g><g><title>__init__ (autograd/numpy/numpy_vspaces.py:6) (142 samples, 0.25%)</title><rect x="32.7137%" y="324" width="0.2462%" height="15" fill="rgb(230,138,44)" fg:x="18867" fg:w="142"/><text x="32.9637%" y="334.50"></text></g><g><title>__init__ (autograd/numpy/numpy_vspaces.py:7) (101 samples, 0.18%)</title><rect x="32.9600%" y="324" width="0.1751%" height="15" fill="rgb(235,182,43)" fg:x="19009" fg:w="101"/><text x="33.2100%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:701) (1,908 samples, 3.31%)</title><rect x="29.8684%" y="276" width="3.3083%" height="15" fill="rgb(242,16,51)" fg:x="17226" fg:w="1908"/><text x="30.1184%" y="286.50">&lt;la..</text></g><g><title>vspace (autograd/core.py:233) (985 samples, 1.71%)</title><rect x="31.4688%" y="292" width="1.7079%" height="15" fill="rgb(248,9,4)" fg:x="18149" fg:w="985"/><text x="31.7188%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:59) (346 samples, 0.60%)</title><rect x="32.5768%" y="308" width="0.5999%" height="15" fill="rgb(210,31,22)" fg:x="18788" fg:w="346"/><text x="32.8268%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:82) (300 samples, 0.52%)</title><rect x="33.1767%" y="276" width="0.5202%" height="15" fill="rgb(239,54,39)" fg:x="19134" fg:w="300"/><text x="33.4267%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (192 samples, 0.33%)</title><rect x="33.3640%" y="292" width="0.3329%" height="15" fill="rgb(230,99,41)" fg:x="19242" fg:w="192"/><text x="33.6140%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (3,630 samples, 6.29%)</title><rect x="27.8744%" y="260" width="6.2941%" height="15" fill="rgb(253,106,12)" fg:x="16076" fg:w="3630"/><text x="28.1244%" y="270.50">&lt;lambda&gt;..</text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:83) (272 samples, 0.47%)</title><rect x="33.6969%" y="276" width="0.4716%" height="15" fill="rgb(213,46,41)" fg:x="19434" fg:w="272"/><text x="33.9469%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (177 samples, 0.31%)</title><rect x="33.8616%" y="292" width="0.3069%" height="15" fill="rgb(215,133,35)" fg:x="19529" fg:w="177"/><text x="34.1116%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/tracer.py:124) (84 samples, 0.15%)</title><rect x="35.2782%" y="324" width="0.1456%" height="15" fill="rgb(213,28,5)" fg:x="20346" fg:w="84"/><text x="35.5282%" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:4) (95 samples, 0.16%)</title><rect x="35.4308%" y="324" width="0.1647%" height="15" fill="rgb(215,77,49)" fg:x="20434" fg:w="95"/><text x="35.6808%" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:5) (346 samples, 0.60%)</title><rect x="35.5955%" y="324" width="0.5999%" height="15" fill="rgb(248,100,22)" fg:x="20529" fg:w="346"/><text x="35.8455%" y="334.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:649) (903 samples, 1.57%)</title><rect x="34.6505%" y="292" width="1.5657%" height="15" fill="rgb(208,67,9)" fg:x="19984" fg:w="903"/><text x="34.9005%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (717 samples, 1.24%)</title><rect x="34.9730%" y="308" width="1.2432%" height="15" fill="rgb(219,133,21)" fg:x="20170" fg:w="717"/><text x="35.2230%" y="318.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:651) (91 samples, 0.16%)</title><rect x="36.2163%" y="292" width="0.1578%" height="15" fill="rgb(246,46,29)" fg:x="20887" fg:w="91"/><text x="36.4663%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/tracer.py:124) (69 samples, 0.12%)</title><rect x="37.0035%" y="324" width="0.1196%" height="15" fill="rgb(246,185,52)" fg:x="21341" fg:w="69"/><text x="37.2535%" y="334.50"></text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;:4) (78 samples, 0.14%)</title><rect x="37.1283%" y="324" width="0.1352%" height="15" fill="rgb(252,136,11)" fg:x="21413" fg:w="78"/><text x="37.3783%" y="334.50"></text></g><g><title>iscomplexobj (numpy/lib/type_check.py:337) (76 samples, 0.13%)</title><rect x="37.6225%" y="340" width="0.1318%" height="15" fill="rgb(219,138,53)" fg:x="21698" fg:w="76"/><text x="37.8725%" y="350.50"></text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;:5) (393 samples, 0.68%)</title><rect x="37.2635%" y="324" width="0.6814%" height="15" fill="rgb(211,51,23)" fg:x="21491" fg:w="393"/><text x="37.5135%" y="334.50"></text></g><g><title>iscomplexobj (numpy/lib/type_check.py:341) (76 samples, 0.13%)</title><rect x="37.8132%" y="340" width="0.1318%" height="15" fill="rgb(247,221,28)" fg:x="21808" fg:w="76"/><text x="38.0632%" y="350.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:654) (911 samples, 1.58%)</title><rect x="36.3896%" y="292" width="1.5796%" height="15" fill="rgb(251,222,45)" fg:x="20987" fg:w="911"/><text x="36.6396%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (714 samples, 1.24%)</title><rect x="36.7312%" y="308" width="1.2380%" height="15" fill="rgb(217,162,53)" fg:x="21184" fg:w="714"/><text x="36.9812%" y="318.50"></text></g><g><title>backward_pass (autograd/core.py:21) (6,226 samples, 10.80%)</title><rect x="27.1843%" y="244" width="10.7953%" height="15" fill="rgb(229,93,14)" fg:x="15678" fg:w="6226"/><text x="27.4343%" y="254.50">backward_pass (a..</text></g><g><title>&lt;lambda&gt; (autograd/core.py:78) (2,198 samples, 3.81%)</title><rect x="34.1685%" y="260" width="3.8111%" height="15" fill="rgb(209,67,49)" fg:x="19706" fg:w="2198"/><text x="34.4185%" y="270.50">&lt;lam..</text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (2,126 samples, 3.69%)</title><rect x="34.2933%" y="276" width="3.6863%" height="15" fill="rgb(213,87,29)" fg:x="19778" fg:w="2126"/><text x="34.5433%" y="286.50">&lt;lam..</text></g><g><title>backward_pass (autograd/core.py:22) (711 samples, 1.23%)</title><rect x="37.9796%" y="244" width="1.2328%" height="15" fill="rgb(205,151,52)" fg:x="21904" fg:w="711"/><text x="38.2296%" y="254.50"></text></g><g><title>&lt;genexpr&gt; (autograd/core.py:49) (108 samples, 0.19%)</title><rect x="39.0252%" y="260" width="0.1873%" height="15" fill="rgb(253,215,39)" fg:x="22507" fg:w="108"/><text x="39.2752%" y="270.50"></text></g><g><title>add_outgrads (autograd/core.py:159) (162 samples, 0.28%)</title><rect x="39.9858%" y="260" width="0.2809%" height="15" fill="rgb(221,220,41)" fg:x="23061" fg:w="162"/><text x="40.2358%" y="270.50"></text></g><g><title>add_outgrads (autograd/core.py:161) (118 samples, 0.20%)</title><rect x="40.3274%" y="260" width="0.2046%" height="15" fill="rgb(218,133,21)" fg:x="23258" fg:w="118"/><text x="40.5774%" y="270.50"></text></g><g><title>vspace (autograd/core.py:233) (87 samples, 0.15%)</title><rect x="40.3811%" y="276" width="0.1509%" height="15" fill="rgb(221,193,43)" fg:x="23289" fg:w="87"/><text x="40.6311%" y="286.50"></text></g><g><title>find_top_boxed_args (autograd/tracer.py:69) (74 samples, 0.13%)</title><rect x="40.7955%" y="292" width="0.1283%" height="15" fill="rgb(240,128,52)" fg:x="23528" fg:w="74"/><text x="41.0455%" y="302.50"></text></g><g><title>find_top_boxed_args (autograd/tracer.py:70) (117 samples, 0.20%)</title><rect x="40.9238%" y="292" width="0.2029%" height="15" fill="rgb(253,114,12)" fg:x="23602" fg:w="117"/><text x="41.1738%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/tracer.py:123) (73 samples, 0.13%)</title><rect x="41.0001%" y="308" width="0.1266%" height="15" fill="rgb(215,223,47)" fg:x="23646" fg:w="73"/><text x="41.2501%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (245 samples, 0.42%)</title><rect x="40.7175%" y="276" width="0.4248%" height="15" fill="rgb(248,225,23)" fg:x="23483" fg:w="245"/><text x="40.9675%" y="286.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (1,287 samples, 2.23%)</title><rect x="41.3469%" y="308" width="2.2315%" height="15" fill="rgb(250,108,0)" fg:x="23846" fg:w="1287"/><text x="41.5969%" y="318.50">m..</text></g><g><title>add_outgrads (autograd/core.py:165) (1,746 samples, 3.03%)</title><rect x="40.5580%" y="260" width="3.0274%" height="15" fill="rgb(228,208,7)" fg:x="23391" fg:w="1746"/><text x="40.8080%" y="270.50">add..</text></g><g><title>f_wrapped (autograd/tracer.py:48) (1,405 samples, 2.44%)</title><rect x="41.1492%" y="276" width="2.4361%" height="15" fill="rgb(244,45,10)" fg:x="23732" fg:w="1405"/><text x="41.3992%" y="286.50">f_..</text></g><g><title>sparse_add (autograd/core.py:186) (1,330 samples, 2.31%)</title><rect x="41.2793%" y="292" width="2.3061%" height="15" fill="rgb(207,125,25)" fg:x="23807" fg:w="1330"/><text x="41.5293%" y="302.50">s..</text></g><g><title>f_wrapped (autograd/tracer.py:37) (68 samples, 0.12%)</title><rect x="43.6079%" y="276" width="0.1179%" height="15" fill="rgb(210,195,18)" fg:x="25150" fg:w="68"/><text x="43.8579%" y="286.50"></text></g><g><title>mut_add (autograd/core.py:201) (65 samples, 0.11%)</title><rect x="43.7484%" y="292" width="0.1127%" height="15" fill="rgb(249,80,12)" fg:x="25231" fg:w="65"/><text x="43.9984%" y="302.50"></text></g><g><title>add_outgrads (autograd/core.py:170) (405 samples, 0.70%)</title><rect x="43.5871%" y="260" width="0.7022%" height="15" fill="rgb(221,65,9)" fg:x="25138" fg:w="405"/><text x="43.8371%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (324 samples, 0.56%)</title><rect x="43.7276%" y="276" width="0.5618%" height="15" fill="rgb(235,49,36)" fg:x="25219" fg:w="324"/><text x="43.9776%" y="286.50"></text></g><g><title>mut_add (autograd/core.py:202) (247 samples, 0.43%)</title><rect x="43.8611%" y="292" width="0.4283%" height="15" fill="rgb(225,32,20)" fg:x="25296" fg:w="247"/><text x="44.1111%" y="302.50"></text></g><g><title>_mut_add (autograd/core.py:213) (232 samples, 0.40%)</title><rect x="43.8871%" y="308" width="0.4023%" height="15" fill="rgb(215,141,46)" fg:x="25311" fg:w="232"/><text x="44.1371%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (58 samples, 0.10%)</title><rect x="44.3396%" y="276" width="0.1006%" height="15" fill="rgb(250,160,47)" fg:x="25572" fg:w="58"/><text x="44.5896%" y="286.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (483 samples, 0.84%)</title><rect x="44.4957%" y="308" width="0.8375%" height="15" fill="rgb(216,222,40)" fg:x="25662" fg:w="483"/><text x="44.7457%" y="318.50"></text></g><g><title>add_outgrads (autograd/core.py:171) (605 samples, 1.05%)</title><rect x="44.2894%" y="260" width="1.0490%" height="15" fill="rgb(234,217,39)" fg:x="25543" fg:w="605"/><text x="44.5394%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (518 samples, 0.90%)</title><rect x="44.4402%" y="276" width="0.8982%" height="15" fill="rgb(207,178,40)" fg:x="25630" fg:w="518"/><text x="44.6902%" y="286.50"></text></g><g><title>sparse_add (autograd/core.py:186) (500 samples, 0.87%)</title><rect x="44.4714%" y="292" width="0.8670%" height="15" fill="rgb(221,136,13)" fg:x="25648" fg:w="500"/><text x="44.7214%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (135 samples, 0.23%)</title><rect x="45.4407%" y="276" width="0.2341%" height="15" fill="rgb(249,199,10)" fg:x="26207" fg:w="135"/><text x="45.6907%" y="286.50"></text></g><g><title>sparse_add (autograd/core.py:186) (106 samples, 0.18%)</title><rect x="45.4910%" y="292" width="0.1838%" height="15" fill="rgb(249,222,13)" fg:x="26236" fg:w="106"/><text x="45.7410%" y="302.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (102 samples, 0.18%)</title><rect x="45.4979%" y="308" width="0.1769%" height="15" fill="rgb(244,185,38)" fg:x="26240" fg:w="102"/><text x="45.7479%" y="318.50"></text></g><g><title>add_outgrads (autograd/core.py:176) (181 samples, 0.31%)</title><rect x="45.3765%" y="260" width="0.3138%" height="15" fill="rgb(236,202,9)" fg:x="26170" fg:w="181"/><text x="45.6265%" y="270.50"></text></g><g><title>backward_pass (autograd/core.py:23) (3,766 samples, 6.53%)</title><rect x="39.2125%" y="244" width="6.5299%" height="15" fill="rgb(250,229,37)" fg:x="22615" fg:w="3766"/><text x="39.4625%" y="254.50">backward_..</text></g><g><title>stack (autograd/numpy/numpy_wrapper.py:88) (12,497 samples, 21.67%)</title><rect x="24.0771%" y="196" width="21.6687%" height="15" fill="rgb(206,174,23)" fg:x="13886" fg:w="12497"/><text x="24.3271%" y="206.50">stack (autograd/numpy/numpy_wrappe..</text></g><g><title>&lt;listcomp&gt; (autograd/numpy/numpy_wrapper.py:88) (12,497 samples, 21.67%)</title><rect x="24.0771%" y="212" width="21.6687%" height="15" fill="rgb(211,33,43)" fg:x="13886" fg:w="12497"/><text x="24.3271%" y="222.50">&lt;listcomp&gt; (autograd/numpy/numpy_w..</text></g><g><title>vjp (autograd/core.py:14) (12,166 samples, 21.09%)</title><rect x="24.6510%" y="228" width="21.0948%" height="15" fill="rgb(245,58,50)" fg:x="14217" fg:w="12166"/><text x="24.9010%" y="238.50">vjp (autograd/core.py:14)</text></g><g><title>nary_f (autograd/wrap_util.py:20) (14,044 samples, 24.35%)</title><rect x="21.4121%" y="164" width="24.3511%" height="15" fill="rgb(244,68,36)" fg:x="12349" fg:w="14044"/><text x="21.6621%" y="174.50">nary_f (autograd/wrap_util.py:20)</text></g><g><title>jacobian (autograd/differential_operators.py:61) (12,560 samples, 21.78%)</title><rect x="23.9852%" y="180" width="21.7780%" height="15" fill="rgb(232,229,15)" fg:x="13833" fg:w="12560"/><text x="24.2352%" y="190.50">jacobian (autograd/differential_op..</text></g><g><title>f_x (3_agents_Simulation_decentralized.py:211) (14,076 samples, 24.41%)</title><rect x="21.3930%" y="148" width="24.4066%" height="15" fill="rgb(254,30,23)" fg:x="12338" fg:w="14076"/><text x="21.6430%" y="158.50">f_x (3_agents_Simulation_decentralized...</text></g><g><title>compute_pairwise_distance (3_agents_Simulation_decentralized.py:117) (83 samples, 0.14%)</title><rect x="46.0302%" y="404" width="0.1439%" height="15" fill="rgb(235,160,14)" fg:x="26547" fg:w="83"/><text x="46.2802%" y="414.50"></text></g><g><title>cost_avoidance (3_agents_Simulation_decentralized.py:134) (217 samples, 0.38%)</title><rect x="45.8932%" y="388" width="0.3763%" height="15" fill="rgb(212,155,44)" fg:x="26468" fg:w="217"/><text x="46.1432%" y="398.50"></text></g><g><title>cost_stage (3_agents_Simulation_decentralized.py:143) (400 samples, 0.69%)</title><rect x="45.8898%" y="372" width="0.6936%" height="15" fill="rgb(226,2,50)" fg:x="26466" fg:w="400"/><text x="46.1398%" y="382.50"></text></g><g><title>cost_avoidance (3_agents_Simulation_decentralized.py:136) (181 samples, 0.31%)</title><rect x="46.2695%" y="388" width="0.3138%" height="15" fill="rgb(234,177,6)" fg:x="26685" fg:w="181"/><text x="46.5195%" y="398.50"></text></g><g><title>__matmul__ (autograd/numpy/numpy_boxes.py:32) (88 samples, 0.15%)</title><rect x="46.8018%" y="404" width="0.1526%" height="15" fill="rgb(217,24,9)" fg:x="26992" fg:w="88"/><text x="47.0518%" y="414.50"></text></g><g><title>cost_stage (3_agents_Simulation_decentralized.py:144) (269 samples, 0.47%)</title><rect x="46.5833%" y="372" width="0.4664%" height="15" fill="rgb(220,13,46)" fg:x="26866" fg:w="269"/><text x="46.8333%" y="382.50"></text></g><g><title>cost_trj (3_agents_Simulation_decentralized.py:92) (216 samples, 0.37%)</title><rect x="46.6752%" y="388" width="0.3745%" height="15" fill="rgb(239,221,27)" fg:x="26919" fg:w="216"/><text x="46.9252%" y="398.50"></text></g><g><title>trace (autograd/tracer.py:10) (725 samples, 1.26%)</title><rect x="45.8828%" y="324" width="1.2571%" height="15" fill="rgb(222,198,25)" fg:x="26462" fg:w="725"/><text x="46.1328%" y="334.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (722 samples, 1.25%)</title><rect x="45.8880%" y="340" width="1.2519%" height="15" fill="rgb(211,99,13)" fg:x="26465" fg:w="722"/><text x="46.1380%" y="350.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (722 samples, 1.25%)</title><rect x="45.8880%" y="356" width="1.2519%" height="15" fill="rgb(232,111,31)" fg:x="26465" fg:w="722"/><text x="46.1380%" y="366.50"></text></g><g><title>make_vjp (autograd/core.py:10) (735 samples, 1.27%)</title><rect x="45.8828%" y="308" width="1.2744%" height="15" fill="rgb(245,82,37)" fg:x="26462" fg:w="735"/><text x="46.1328%" y="318.50"></text></g><g><title>jacobian (autograd/differential_operators.py:57) (737 samples, 1.28%)</title><rect x="45.8811%" y="292" width="1.2779%" height="15" fill="rgb(227,149,46)" fg:x="26461" fg:w="737"/><text x="46.1311%" y="302.50"></text></g><g><title>grad_concatenate_args (autograd/numpy/numpy_vjps.py:539) (98 samples, 0.17%)</title><rect x="47.2613%" y="404" width="0.1699%" height="15" fill="rgb(218,36,50)" fg:x="27257" fg:w="98"/><text x="47.5113%" y="414.50"></text></g><g><title>&lt;listcomp&gt; (autograd/numpy/numpy_vjps.py:539) (97 samples, 0.17%)</title><rect x="47.2630%" y="420" width="0.1682%" height="15" fill="rgb(226,80,48)" fg:x="27258" fg:w="97"/><text x="47.5130%" y="430.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (94 samples, 0.16%)</title><rect x="47.2682%" y="436" width="0.1630%" height="15" fill="rgb(238,224,15)" fg:x="27261" fg:w="94"/><text x="47.5182%" y="446.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_wrapper.py:38) (117 samples, 0.20%)</title><rect x="47.2353%" y="324" width="0.2029%" height="15" fill="rgb(241,136,10)" fg:x="27242" fg:w="117"/><text x="47.4853%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (105 samples, 0.18%)</title><rect x="47.2561%" y="340" width="0.1821%" height="15" fill="rgb(208,32,45)" fg:x="27254" fg:w="105"/><text x="47.5061%" y="350.50"></text></g><g><title>__init__ (autograd/core.py:36) (104 samples, 0.18%)</title><rect x="47.2578%" y="356" width="0.1803%" height="15" fill="rgb(207,135,9)" fg:x="27255" fg:w="104"/><text x="47.5078%" y="366.50"></text></g><g><title>vjp_argnums (autograd/core.py:48) (104 samples, 0.18%)</title><rect x="47.2578%" y="372" width="0.1803%" height="15" fill="rgb(206,86,44)" fg:x="27255" fg:w="104"/><text x="47.5078%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (autograd/core.py:48) (104 samples, 0.18%)</title><rect x="47.2578%" y="388" width="0.1803%" height="15" fill="rgb(245,177,15)" fg:x="27255" fg:w="104"/><text x="47.5078%" y="398.50"></text></g><g><title>stack (autograd/numpy/numpy_wrapper.py:103) (130 samples, 0.23%)</title><rect x="47.2318%" y="308" width="0.2254%" height="15" fill="rgb(206,64,50)" fg:x="27240" fg:w="130"/><text x="47.4818%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:418) (93 samples, 0.16%)</title><rect x="47.8127%" y="388" width="0.1613%" height="15" fill="rgb(234,36,40)" fg:x="27575" fg:w="93"/><text x="48.0627%" y="398.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (96 samples, 0.17%)</title><rect x="47.9739%" y="388" width="0.1665%" height="15" fill="rgb(213,64,8)" fg:x="27668" fg:w="96"/><text x="48.2239%" y="398.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (411 samples, 0.71%)</title><rect x="47.6757%" y="372" width="0.7126%" height="15" fill="rgb(210,75,36)" fg:x="27496" fg:w="411"/><text x="47.9257%" y="382.50"></text></g><g><title>vjp (autograd/numpy/linalg.py:100) (86 samples, 0.15%)</title><rect x="48.2392%" y="388" width="0.1491%" height="15" fill="rgb(229,88,21)" fg:x="27821" fg:w="86"/><text x="48.4892%" y="398.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:653) (65 samples, 0.11%)</title><rect x="48.5565%" y="404" width="0.1127%" height="15" fill="rgb(252,204,47)" fg:x="28004" fg:w="65"/><text x="48.8065%" y="414.50"></text></g><g><title>backward_pass (autograd/core.py:21) (590 samples, 1.02%)</title><rect x="47.6636%" y="356" width="1.0230%" height="15" fill="rgb(208,77,27)" fg:x="27489" fg:w="590"/><text x="47.9136%" y="366.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:78) (172 samples, 0.30%)</title><rect x="48.3883%" y="372" width="0.2982%" height="15" fill="rgb(221,76,26)" fg:x="27907" fg:w="172"/><text x="48.6383%" y="382.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (108 samples, 0.19%)</title><rect x="48.4993%" y="388" width="0.1873%" height="15" fill="rgb(225,139,18)" fg:x="27971" fg:w="108"/><text x="48.7493%" y="398.50"></text></g><g><title>stack (autograd/numpy/numpy_wrapper.py:88) (879 samples, 1.52%)</title><rect x="47.4572%" y="308" width="1.5241%" height="15" fill="rgb(230,137,11)" fg:x="27370" fg:w="879"/><text x="47.7072%" y="318.50"></text></g><g><title>&lt;listcomp&gt; (autograd/numpy/numpy_wrapper.py:88) (879 samples, 1.52%)</title><rect x="47.4572%" y="324" width="1.5241%" height="15" fill="rgb(212,28,1)" fg:x="27370" fg:w="879"/><text x="47.7072%" y="334.50"></text></g><g><title>vjp (autograd/core.py:14) (807 samples, 1.40%)</title><rect x="47.5821%" y="340" width="1.3993%" height="15" fill="rgb(248,164,17)" fg:x="27442" fg:w="807"/><text x="47.8321%" y="350.50"></text></g><g><title>backward_pass (autograd/core.py:23) (155 samples, 0.27%)</title><rect x="48.7126%" y="356" width="0.2688%" height="15" fill="rgb(222,171,42)" fg:x="28094" fg:w="155"/><text x="48.9626%" y="366.50"></text></g><g><title>trace (autograd/tracer.py:10) (1,808 samples, 3.13%)</title><rect x="45.8516%" y="244" width="3.1349%" height="15" fill="rgb(243,84,45)" fg:x="26444" fg:w="1808"/><text x="46.1016%" y="254.50">tra..</text></g><g><title>unary_f (autograd/wrap_util.py:15) (1,807 samples, 3.13%)</title><rect x="45.8533%" y="260" width="3.1332%" height="15" fill="rgb(252,49,23)" fg:x="26445" fg:w="1807"/><text x="46.1033%" y="270.50">una..</text></g><g><title>nary_f (autograd/wrap_util.py:20) (1,799 samples, 3.12%)</title><rect x="45.8672%" y="276" width="3.1193%" height="15" fill="rgb(215,19,7)" fg:x="26453" fg:w="1799"/><text x="46.1172%" y="286.50">nar..</text></g><g><title>jacobian (autograd/differential_operators.py:61) (1,038 samples, 1.80%)</title><rect x="47.1867%" y="292" width="1.7998%" height="15" fill="rgb(238,81,41)" fg:x="27214" fg:w="1038"/><text x="47.4367%" y="302.50">j..</text></g><g><title>make_vjp (autograd/core.py:10) (1,821 samples, 3.16%)</title><rect x="45.8499%" y="228" width="3.1575%" height="15" fill="rgb(210,199,37)" fg:x="26443" fg:w="1821"/><text x="46.0999%" y="238.50">mak..</text></g><g><title>jacobian (autograd/differential_operators.py:57) (1,828 samples, 3.17%)</title><rect x="45.8481%" y="212" width="3.1696%" height="15" fill="rgb(244,192,49)" fg:x="26442" fg:w="1828"/><text x="46.0981%" y="222.50">jac..</text></g><g><title>standard_basis (autograd/numpy/numpy_vspaces.py:18) (65 samples, 0.11%)</title><rect x="49.2119%" y="260" width="0.1127%" height="15" fill="rgb(226,211,11)" fg:x="28382" fg:w="65"/><text x="49.4619%" y="270.50"></text></g><g><title>toposort (autograd/util.py:29) (68 samples, 0.12%)</title><rect x="49.6489%" y="292" width="0.1179%" height="15" fill="rgb(236,162,54)" fg:x="28634" fg:w="68"/><text x="49.8989%" y="302.50"></text></g><g><title>toposort (autograd/util.py:35) (100 samples, 0.17%)</title><rect x="49.9107%" y="292" width="0.1734%" height="15" fill="rgb(220,229,9)" fg:x="28785" fg:w="100"/><text x="50.1607%" y="302.50"></text></g><g><title>toposort (autograd/util.py:36) (74 samples, 0.13%)</title><rect x="50.0841%" y="292" width="0.1283%" height="15" fill="rgb(250,87,22)" fg:x="28885" fg:w="74"/><text x="50.3341%" y="302.50"></text></g><g><title>toposort (autograd/util.py:37) (61 samples, 0.11%)</title><rect x="50.2124%" y="292" width="0.1058%" height="15" fill="rgb(239,43,17)" fg:x="28959" fg:w="61"/><text x="50.4624%" y="302.50"></text></g><g><title>backward_pass (autograd/core.py:19) (557 samples, 0.97%)</title><rect x="49.3836%" y="276" width="0.9658%" height="15" fill="rgb(231,177,25)" fg:x="28481" fg:w="557"/><text x="49.6336%" y="286.50"></text></g><g><title>backward_pass (autograd/core.py:20) (77 samples, 0.13%)</title><rect x="50.3494%" y="276" width="0.1335%" height="15" fill="rgb(219,179,1)" fg:x="29038" fg:w="77"/><text x="50.5994%" y="286.50"></text></g><g><title>reshape (&lt;__array_function__ internals&gt;:5) (100 samples, 0.17%)</title><rect x="51.0759%" y="340" width="0.1734%" height="15" fill="rgb(238,219,53)" fg:x="29457" fg:w="100"/><text x="51.3259%" y="350.50"></text></g><g><title>reshape (numpy/core/fromnumeric.py:298) (90 samples, 0.16%)</title><rect x="51.0932%" y="356" width="0.1561%" height="15" fill="rgb(232,167,36)" fg:x="29467" fg:w="90"/><text x="51.3432%" y="366.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (70 samples, 0.12%)</title><rect x="51.1279%" y="372" width="0.1214%" height="15" fill="rgb(244,19,51)" fg:x="29487" fg:w="70"/><text x="51.3779%" y="382.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (136 samples, 0.24%)</title><rect x="51.0152%" y="324" width="0.2358%" height="15" fill="rgb(224,6,22)" fg:x="29422" fg:w="136"/><text x="51.2652%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:101) (273 samples, 0.47%)</title><rect x="50.8904%" y="308" width="0.4734%" height="15" fill="rgb(224,145,5)" fg:x="29350" fg:w="273"/><text x="51.1404%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (59 samples, 0.10%)</title><rect x="51.2614%" y="324" width="0.1023%" height="15" fill="rgb(234,130,49)" fg:x="29564" fg:w="59"/><text x="51.5114%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (65 samples, 0.11%)</title><rect x="51.4209%" y="324" width="0.1127%" height="15" fill="rgb(254,6,2)" fg:x="29656" fg:w="65"/><text x="51.6709%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:109) (127 samples, 0.22%)</title><rect x="51.3637%" y="308" width="0.2202%" height="15" fill="rgb(208,96,46)" fg:x="29623" fg:w="127"/><text x="51.6137%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:121) (86 samples, 0.15%)</title><rect x="51.5839%" y="308" width="0.1491%" height="15" fill="rgb(239,3,39)" fg:x="29750" fg:w="86"/><text x="51.8339%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:271) (81 samples, 0.14%)</title><rect x="51.7330%" y="308" width="0.1404%" height="15" fill="rgb(233,210,1)" fg:x="29836" fg:w="81"/><text x="51.9830%" y="318.50"></text></g><g><title>repeat_to_match_shape (autograd/numpy/numpy_vjps.py:280) (117 samples, 0.20%)</title><rect x="51.9463%" y="324" width="0.2029%" height="15" fill="rgb(244,137,37)" fg:x="29959" fg:w="117"/><text x="52.1963%" y="334.50"></text></g><g><title>prod (numpy/core/fromnumeric.py:3051) (354 samples, 0.61%)</title><rect x="52.4509%" y="356" width="0.6138%" height="15" fill="rgb(240,136,2)" fg:x="30250" fg:w="354"/><text x="52.7009%" y="366.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:84) (249 samples, 0.43%)</title><rect x="52.6329%" y="372" width="0.4317%" height="15" fill="rgb(239,18,37)" fg:x="30355" fg:w="249"/><text x="52.8829%" y="382.50"></text></g><g><title>_prod (numpy/core/_methods.py:52) (171 samples, 0.30%)</title><rect x="52.7682%" y="388" width="0.2965%" height="15" fill="rgb(218,185,22)" fg:x="30433" fg:w="171"/><text x="53.0182%" y="398.50"></text></g><g><title>repeat_to_match_shape (autograd/numpy/numpy_vjps.py:282) (522 samples, 0.91%)</title><rect x="52.1665%" y="324" width="0.9051%" height="15" fill="rgb(225,218,4)" fg:x="30086" fg:w="522"/><text x="52.4165%" y="334.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;:5) (428 samples, 0.74%)</title><rect x="52.3295%" y="340" width="0.7421%" height="15" fill="rgb(230,182,32)" fg:x="30180" fg:w="428"/><text x="52.5795%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:299) (1,038 samples, 1.80%)</title><rect x="51.8735%" y="308" width="1.7998%" height="15" fill="rgb(242,56,43)" fg:x="29917" fg:w="1038"/><text x="52.1235%" y="318.50">&lt;..</text></g><g><title>repeat_to_match_shape (autograd/numpy/numpy_vjps.py:285) (347 samples, 0.60%)</title><rect x="53.0716%" y="324" width="0.6017%" height="15" fill="rgb(233,99,24)" fg:x="30608" fg:w="347"/><text x="53.3216%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (127 samples, 0.22%)</title><rect x="53.4531%" y="340" width="0.2202%" height="15" fill="rgb(234,209,42)" fg:x="30828" fg:w="127"/><text x="53.7031%" y="350.50"></text></g><g><title>reshape (&lt;__array_function__ internals&gt;:5) (110 samples, 0.19%)</title><rect x="53.4826%" y="356" width="0.1907%" height="15" fill="rgb(227,7,12)" fg:x="30845" fg:w="110"/><text x="53.7326%" y="366.50"></text></g><g><title>reshape (numpy/core/fromnumeric.py:298) (97 samples, 0.17%)</title><rect x="53.5051%" y="372" width="0.1682%" height="15" fill="rgb(245,203,43)" fg:x="30858" fg:w="97"/><text x="53.7551%" y="382.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (75 samples, 0.13%)</title><rect x="53.5433%" y="388" width="0.1300%" height="15" fill="rgb(238,205,33)" fg:x="30880" fg:w="75"/><text x="53.7933%" y="398.50"></text></g><g><title>matmul_adjoint_0 (autograd/numpy/numpy_vjps.py:385) (59 samples, 0.10%)</title><rect x="53.6976%" y="324" width="0.1023%" height="15" fill="rgb(231,56,7)" fg:x="30969" fg:w="59"/><text x="53.9476%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (82 samples, 0.14%)</title><rect x="53.8467%" y="340" width="0.1422%" height="15" fill="rgb(244,186,29)" fg:x="31055" fg:w="82"/><text x="54.0967%" y="350.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:5) (74 samples, 0.13%)</title><rect x="53.8606%" y="356" width="0.1283%" height="15" fill="rgb(234,111,31)" fg:x="31063" fg:w="74"/><text x="54.1106%" y="366.50"></text></g><g><title>matmul_adjoint_0 (autograd/numpy/numpy_vjps.py:389) (127 samples, 0.22%)</title><rect x="53.8033%" y="324" width="0.2202%" height="15" fill="rgb(241,149,10)" fg:x="31030" fg:w="127"/><text x="54.0533%" y="334.50"></text></g><g><title>matmul_adjoint_0 (autograd/numpy/numpy_vjps.py:394) (78 samples, 0.14%)</title><rect x="54.0270%" y="324" width="0.1352%" height="15" fill="rgb(249,206,44)" fg:x="31159" fg:w="78"/><text x="54.2770%" y="334.50"></text></g><g><title>matmul_adjoint_0 (autograd/numpy/numpy_vjps.py:395) (192 samples, 0.33%)</title><rect x="54.1623%" y="324" width="0.3329%" height="15" fill="rgb(251,153,30)" fg:x="31237" fg:w="192"/><text x="54.4123%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (159 samples, 0.28%)</title><rect x="54.2195%" y="340" width="0.2757%" height="15" fill="rgb(239,152,38)" fg:x="31270" fg:w="159"/><text x="54.4695%" y="350.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:649) (74 samples, 0.13%)</title><rect x="54.5090%" y="340" width="0.1283%" height="15" fill="rgb(249,139,47)" fg:x="31437" fg:w="74"/><text x="54.7590%" y="350.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:650) (123 samples, 0.21%)</title><rect x="54.6374%" y="340" width="0.2133%" height="15" fill="rgb(244,64,35)" fg:x="31511" fg:w="123"/><text x="54.8874%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (101 samples, 0.18%)</title><rect x="54.6755%" y="356" width="0.1751%" height="15" fill="rgb(216,46,15)" fg:x="31533" fg:w="101"/><text x="54.9255%" y="366.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:5) (95 samples, 0.16%)</title><rect x="54.6859%" y="372" width="0.1647%" height="15" fill="rgb(250,74,19)" fg:x="31539" fg:w="95"/><text x="54.9359%" y="382.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2259) (85 samples, 0.15%)</title><rect x="54.7032%" y="388" width="0.1474%" height="15" fill="rgb(249,42,33)" fg:x="31549" fg:w="85"/><text x="54.9532%" y="398.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:653) (142 samples, 0.25%)</title><rect x="54.8680%" y="340" width="0.2462%" height="15" fill="rgb(242,149,17)" fg:x="31644" fg:w="142"/><text x="55.1180%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (132 samples, 0.23%)</title><rect x="54.8853%" y="356" width="0.2289%" height="15" fill="rgb(244,29,21)" fg:x="31654" fg:w="132"/><text x="55.1353%" y="366.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:5) (114 samples, 0.20%)</title><rect x="54.9165%" y="372" width="0.1977%" height="15" fill="rgb(220,130,37)" fg:x="31672" fg:w="114"/><text x="55.1665%" y="382.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2259) (100 samples, 0.17%)</title><rect x="54.9408%" y="388" width="0.1734%" height="15" fill="rgb(211,67,2)" fg:x="31686" fg:w="100"/><text x="55.1908%" y="398.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (68 samples, 0.12%)</title><rect x="54.9963%" y="404" width="0.1179%" height="15" fill="rgb(235,68,52)" fg:x="31718" fg:w="68"/><text x="55.2463%" y="414.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:418) (891 samples, 1.54%)</title><rect x="53.6733%" y="308" width="1.5449%" height="15" fill="rgb(246,142,3)" fg:x="30955" fg:w="891"/><text x="53.9233%" y="318.50"></text></g><g><title>matmul_adjoint_0 (autograd/numpy/numpy_vjps.py:396) (417 samples, 0.72%)</title><rect x="54.4952%" y="324" width="0.7230%" height="15" fill="rgb(241,25,7)" fg:x="31429" fg:w="417"/><text x="54.7452%" y="334.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:654) (60 samples, 0.10%)</title><rect x="55.1142%" y="340" width="0.1040%" height="15" fill="rgb(242,119,39)" fg:x="31786" fg:w="60"/><text x="55.3642%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:35) (73 samples, 0.13%)</title><rect x="55.2702%" y="324" width="0.1266%" height="15" fill="rgb(241,98,45)" fg:x="31876" fg:w="73"/><text x="55.5202%" y="334.50"></text></g><g><title>where (&lt;__array_function__ internals&gt;:5) (80 samples, 0.14%)</title><rect x="55.6239%" y="356" width="0.1387%" height="15" fill="rgb(254,28,30)" fg:x="32080" fg:w="80"/><text x="55.8739%" y="366.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:59) (212 samples, 0.37%)</title><rect x="55.3968%" y="324" width="0.3676%" height="15" fill="rgb(241,142,54)" fg:x="31949" fg:w="212"/><text x="55.6468%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (88 samples, 0.15%)</title><rect x="55.6118%" y="340" width="0.1526%" height="15" fill="rgb(222,85,15)" fg:x="32073" fg:w="88"/><text x="55.8618%" y="350.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:649) (159 samples, 0.28%)</title><rect x="55.7748%" y="324" width="0.2757%" height="15" fill="rgb(210,85,47)" fg:x="32167" fg:w="159"/><text x="56.0248%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (121 samples, 0.21%)</title><rect x="55.8407%" y="340" width="0.2098%" height="15" fill="rgb(224,206,25)" fg:x="32205" fg:w="121"/><text x="56.0907%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (655 samples, 1.14%)</title><rect x="55.2182%" y="308" width="1.1357%" height="15" fill="rgb(243,201,19)" fg:x="31846" fg:w="655"/><text x="55.4682%" y="318.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:654) (151 samples, 0.26%)</title><rect x="56.0921%" y="324" width="0.2618%" height="15" fill="rgb(236,59,4)" fg:x="32350" fg:w="151"/><text x="56.3421%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (120 samples, 0.21%)</title><rect x="56.1459%" y="340" width="0.2081%" height="15" fill="rgb(254,179,45)" fg:x="32381" fg:w="120"/><text x="56.3959%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (60 samples, 0.10%)</title><rect x="56.5325%" y="324" width="0.1040%" height="15" fill="rgb(226,14,10)" fg:x="32604" fg:w="60"/><text x="56.7825%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:58) (66 samples, 0.11%)</title><rect x="56.6764%" y="340" width="0.1144%" height="15" fill="rgb(244,27,41)" fg:x="32687" fg:w="66"/><text x="56.9264%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:701) (302 samples, 0.52%)</title><rect x="56.3869%" y="308" width="0.5236%" height="15" fill="rgb(235,35,32)" fg:x="32520" fg:w="302"/><text x="56.6369%" y="318.50"></text></g><g><title>vspace (autograd/core.py:233) (157 samples, 0.27%)</title><rect x="56.6383%" y="324" width="0.2722%" height="15" fill="rgb(218,68,31)" fg:x="32665" fg:w="157"/><text x="56.8883%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:59) (69 samples, 0.12%)</title><rect x="56.7909%" y="340" width="0.1196%" height="15" fill="rgb(207,120,37)" fg:x="32753" fg:w="69"/><text x="57.0409%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:702) (125 samples, 0.22%)</title><rect x="56.9105%" y="308" width="0.2167%" height="15" fill="rgb(227,98,0)" fg:x="32822" fg:w="125"/><text x="57.1605%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (3,869 samples, 6.71%)</title><rect x="50.7222%" y="292" width="6.7085%" height="15" fill="rgb(207,7,3)" fg:x="29253" fg:w="3869"/><text x="50.9722%" y="302.50">&lt;lambda&gt; ..</text></g><g><title>vjp (autograd/numpy/linalg.py:100) (175 samples, 0.30%)</title><rect x="57.1273%" y="308" width="0.3034%" height="15" fill="rgb(206,98,19)" fg:x="32947" fg:w="175"/><text x="57.3773%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/linalg.py:80) (128 samples, 0.22%)</title><rect x="57.2087%" y="324" width="0.2219%" height="15" fill="rgb(217,5,26)" fg:x="32994" fg:w="128"/><text x="57.4587%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (109 samples, 0.19%)</title><rect x="57.2417%" y="340" width="0.1890%" height="15" fill="rgb(235,190,38)" fg:x="33013" fg:w="109"/><text x="57.4917%" y="350.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:5) (96 samples, 0.17%)</title><rect x="57.2642%" y="356" width="0.1665%" height="15" fill="rgb(247,86,24)" fg:x="33026" fg:w="96"/><text x="57.5142%" y="366.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:53) (67 samples, 0.12%)</title><rect x="57.7445%" y="324" width="0.1162%" height="15" fill="rgb(205,101,16)" fg:x="33303" fg:w="67"/><text x="57.9945%" y="334.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:649) (161 samples, 0.28%)</title><rect x="57.8694%" y="324" width="0.2792%" height="15" fill="rgb(246,168,33)" fg:x="33375" fg:w="161"/><text x="58.1194%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (121 samples, 0.21%)</title><rect x="57.9387%" y="340" width="0.2098%" height="15" fill="rgb(231,114,1)" fg:x="33415" fg:w="121"/><text x="58.1887%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (72 samples, 0.12%)</title><rect x="58.3028%" y="340" width="0.1248%" height="15" fill="rgb(207,184,53)" fg:x="33625" fg:w="72"/><text x="58.5528%" y="350.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:70) (111 samples, 0.19%)</title><rect x="58.8300%" y="388" width="0.1925%" height="15" fill="rgb(224,95,51)" fg:x="33929" fg:w="111"/><text x="59.0800%" y="398.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:5) (666 samples, 1.15%)</title><rect x="58.5924%" y="356" width="1.1548%" height="15" fill="rgb(212,188,45)" fg:x="33792" fg:w="666"/><text x="58.8424%" y="366.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2259) (604 samples, 1.05%)</title><rect x="58.6999%" y="372" width="1.0473%" height="15" fill="rgb(223,154,38)" fg:x="33854" fg:w="604"/><text x="58.9499%" y="382.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (400 samples, 0.69%)</title><rect x="59.0536%" y="388" width="0.6936%" height="15" fill="rgb(251,22,52)" fg:x="34058" fg:w="400"/><text x="59.3036%" y="398.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:653) (881 samples, 1.53%)</title><rect x="58.2318%" y="324" width="1.5276%" height="15" fill="rgb(229,209,22)" fg:x="33584" fg:w="881"/><text x="58.4818%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (764 samples, 1.32%)</title><rect x="58.4346%" y="340" width="1.3247%" height="15" fill="rgb(234,138,34)" fg:x="33701" fg:w="764"/><text x="58.6846%" y="350.50"></text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;:5) (62 samples, 0.11%)</title><rect x="59.9518%" y="356" width="0.1075%" height="15" fill="rgb(212,95,11)" fg:x="34576" fg:w="62"/><text x="60.2018%" y="366.50"></text></g><g><title>backward_pass (autograd/core.py:21) (5,526 samples, 9.58%)</title><rect x="50.4829%" y="276" width="9.5816%" height="15" fill="rgb(240,179,47)" fg:x="29115" fg:w="5526"/><text x="50.7329%" y="286.50">backward_pass ..</text></g><g><title>&lt;lambda&gt; (autograd/core.py:78) (1,519 samples, 2.63%)</title><rect x="57.4307%" y="292" width="2.6338%" height="15" fill="rgb(240,163,11)" fg:x="33122" fg:w="1519"/><text x="57.6807%" y="302.50">&lt;l..</text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (1,489 samples, 2.58%)</title><rect x="57.4827%" y="308" width="2.5818%" height="15" fill="rgb(236,37,12)" fg:x="33152" fg:w="1489"/><text x="57.7327%" y="318.50">&lt;l..</text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:654) (176 samples, 0.31%)</title><rect x="59.7593%" y="324" width="0.3052%" height="15" fill="rgb(232,164,16)" fg:x="34465" fg:w="176"/><text x="60.0093%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (136 samples, 0.24%)</title><rect x="59.8287%" y="340" width="0.2358%" height="15" fill="rgb(244,205,15)" fg:x="34505" fg:w="136"/><text x="60.0787%" y="350.50"></text></g><g><title>backward_pass (autograd/core.py:22) (273 samples, 0.47%)</title><rect x="60.0645%" y="276" width="0.4734%" height="15" fill="rgb(223,117,47)" fg:x="34641" fg:w="273"/><text x="60.3145%" y="286.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:58) (65 samples, 0.11%)</title><rect x="61.0823%" y="324" width="0.1127%" height="15" fill="rgb(244,107,35)" fg:x="35228" fg:w="65"/><text x="61.3323%" y="334.50"></text></g><g><title>add_outgrads (autograd/core.py:161) (163 samples, 0.28%)</title><rect x="61.0199%" y="292" width="0.2826%" height="15" fill="rgb(205,140,8)" fg:x="35192" fg:w="163"/><text x="61.2699%" y="302.50"></text></g><g><title>vspace (autograd/core.py:233) (154 samples, 0.27%)</title><rect x="61.0355%" y="308" width="0.2670%" height="15" fill="rgb(228,84,46)" fg:x="35201" fg:w="154"/><text x="61.2855%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:59) (62 samples, 0.11%)</title><rect x="61.1950%" y="324" width="0.1075%" height="15" fill="rgb(254,188,9)" fg:x="35293" fg:w="62"/><text x="61.4450%" y="334.50"></text></g><g><title>add_outgrads (autograd/core.py:165) (96 samples, 0.17%)</title><rect x="61.3164%" y="292" width="0.1665%" height="15" fill="rgb(206,112,54)" fg:x="35363" fg:w="96"/><text x="61.5664%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (78 samples, 0.14%)</title><rect x="61.3476%" y="308" width="0.1352%" height="15" fill="rgb(216,84,49)" fg:x="35381" fg:w="78"/><text x="61.5976%" y="318.50"></text></g><g><title>sparse_add (autograd/core.py:186) (76 samples, 0.13%)</title><rect x="61.3511%" y="324" width="0.1318%" height="15" fill="rgb(214,194,35)" fg:x="35383" fg:w="76"/><text x="61.6011%" y="334.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (73 samples, 0.13%)</title><rect x="61.3563%" y="340" width="0.1266%" height="15" fill="rgb(249,28,3)" fg:x="35386" fg:w="73"/><text x="61.6063%" y="350.50"></text></g><g><title>add_outgrads (autograd/core.py:167) (76 samples, 0.13%)</title><rect x="61.4828%" y="292" width="0.1318%" height="15" fill="rgb(222,56,52)" fg:x="35459" fg:w="76"/><text x="61.7328%" y="302.50"></text></g><g><title>add_outgrads (autograd/core.py:170) (75 samples, 0.13%)</title><rect x="61.6164%" y="292" width="0.1300%" height="15" fill="rgb(245,217,50)" fg:x="35536" fg:w="75"/><text x="61.8664%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (60 samples, 0.10%)</title><rect x="61.6424%" y="308" width="0.1040%" height="15" fill="rgb(213,201,24)" fg:x="35551" fg:w="60"/><text x="61.8924%" y="318.50"></text></g><g><title>add_outgrads (autograd/core.py:171) (119 samples, 0.21%)</title><rect x="61.7464%" y="292" width="0.2063%" height="15" fill="rgb(248,116,28)" fg:x="35611" fg:w="119"/><text x="61.9964%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (102 samples, 0.18%)</title><rect x="61.7759%" y="308" width="0.1769%" height="15" fill="rgb(219,72,43)" fg:x="35628" fg:w="102"/><text x="62.0259%" y="318.50"></text></g><g><title>sparse_add (autograd/core.py:186) (101 samples, 0.18%)</title><rect x="61.7776%" y="324" width="0.1751%" height="15" fill="rgb(209,138,14)" fg:x="35629" fg:w="101"/><text x="62.0276%" y="334.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (99 samples, 0.17%)</title><rect x="61.7811%" y="340" width="0.1717%" height="15" fill="rgb(222,18,33)" fg:x="35631" fg:w="99"/><text x="62.0311%" y="350.50"></text></g><g><title>add_outgrads (autograd/core.py:173) (135 samples, 0.23%)</title><rect x="61.9527%" y="292" width="0.2341%" height="15" fill="rgb(213,199,7)" fg:x="35730" fg:w="135"/><text x="62.2027%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (77 samples, 0.13%)</title><rect x="62.0533%" y="308" width="0.1335%" height="15" fill="rgb(250,110,10)" fg:x="35788" fg:w="77"/><text x="62.3033%" y="318.50"></text></g><g><title>add (autograd/core.py:204) (71 samples, 0.12%)</title><rect x="62.0637%" y="324" width="0.1231%" height="15" fill="rgb(248,123,6)" fg:x="35794" fg:w="71"/><text x="62.3137%" y="334.50"></text></g><g><title>_add (autograd/core.py:212) (64 samples, 0.11%)</title><rect x="62.0758%" y="340" width="0.1110%" height="15" fill="rgb(206,91,31)" fg:x="35801" fg:w="64"/><text x="62.3258%" y="350.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (198 samples, 0.34%)</title><rect x="62.3203%" y="340" width="0.3433%" height="15" fill="rgb(211,154,13)" fg:x="35942" fg:w="198"/><text x="62.5703%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (242 samples, 0.42%)</title><rect x="62.2475%" y="308" width="0.4196%" height="15" fill="rgb(225,148,7)" fg:x="35900" fg:w="242"/><text x="62.4975%" y="318.50"></text></g><g><title>sparse_add (autograd/core.py:186) (206 samples, 0.36%)</title><rect x="62.3099%" y="324" width="0.3572%" height="15" fill="rgb(220,160,43)" fg:x="35936" fg:w="206"/><text x="62.5599%" y="334.50"></text></g><g><title>add_outgrads (autograd/core.py:176) (280 samples, 0.49%)</title><rect x="62.1937%" y="292" width="0.4855%" height="15" fill="rgb(213,52,39)" fg:x="35869" fg:w="280"/><text x="62.4437%" y="302.50"></text></g><g><title>backward_pass (autograd/core.py:23) (1,254 samples, 2.17%)</title><rect x="60.5379%" y="276" width="2.1743%" height="15" fill="rgb(243,137,7)" fg:x="34914" fg:w="1254"/><text x="60.7879%" y="286.50">b..</text></g><g><title>stack (autograd/numpy/numpy_wrapper.py:88) (7,859 samples, 13.63%)</title><rect x="49.0871%" y="228" width="13.6268%" height="15" fill="rgb(230,79,13)" fg:x="28310" fg:w="7859"/><text x="49.3371%" y="238.50">stack (autograd/numpy..</text></g><g><title>&lt;listcomp&gt; (autograd/numpy/numpy_wrapper.py:88) (7,859 samples, 13.63%)</title><rect x="49.0871%" y="244" width="13.6268%" height="15" fill="rgb(247,105,23)" fg:x="28310" fg:w="7859"/><text x="49.3371%" y="254.50">&lt;listcomp&gt; (autograd/..</text></g><g><title>vjp (autograd/core.py:14) (7,697 samples, 13.35%)</title><rect x="49.3680%" y="260" width="13.3459%" height="15" fill="rgb(223,179,41)" fg:x="28472" fg:w="7697"/><text x="49.6180%" y="270.50">vjp (autograd/core.p..</text></g><g><title>nary_f (autograd/wrap_util.py:20) (9,749 samples, 16.90%)</title><rect x="45.8204%" y="196" width="16.9039%" height="15" fill="rgb(218,9,34)" fg:x="26426" fg:w="9749"/><text x="46.0704%" y="206.50">nary_f (autograd/wrap_util..</text></g><g><title>jacobian (autograd/differential_operators.py:61) (7,895 samples, 13.69%)</title><rect x="49.0351%" y="212" width="13.6892%" height="15" fill="rgb(222,106,8)" fg:x="28280" fg:w="7895"/><text x="49.2851%" y="222.50">jacobian (autograd/di..</text></g><g><title>nary_f (autograd/wrap_util.py:20) (9,765 samples, 16.93%)</title><rect x="45.8100%" y="164" width="16.9317%" height="15" fill="rgb(211,220,0)" fg:x="26420" fg:w="9765"/><text x="46.0600%" y="174.50">nary_f (autograd/wrap_util..</text></g><g><title>hessian (autograd/differential_operators.py:78) (9,763 samples, 16.93%)</title><rect x="45.8135%" y="180" width="16.9282%" height="15" fill="rgb(229,52,16)" fg:x="26422" fg:w="9763"/><text x="46.0635%" y="190.50">hessian (autograd/differen..</text></g><g><title>Q_terms (3_agents_Simulation_decentralized.py:243) (23,902 samples, 41.44%)</title><rect x="21.3098%" y="132" width="41.4440%" height="15" fill="rgb(212,155,18)" fg:x="12290" fg:w="23902"/><text x="21.5598%" y="142.50">Q_terms (3_agents_Simulation_decentralized.py:243)</text></g><g><title>l_xx (3_agents_Simulation_decentralized.py:180) (9,778 samples, 16.95%)</title><rect x="45.7996%" y="148" width="16.9542%" height="15" fill="rgb(242,21,14)" fg:x="26414" fg:w="9778"/><text x="46.0496%" y="158.50">l_xx (3_agents_Simulation_..</text></g><g><title>discrete_dynamics_multiple (3_agents_Simulation_decentralized.py:57) (83 samples, 0.14%)</title><rect x="62.8318%" y="260" width="0.1439%" height="15" fill="rgb(222,19,48)" fg:x="36237" fg:w="83"/><text x="63.0818%" y="270.50"></text></g><g><title>__rmul__ (autograd/numpy/numpy_boxes.py:35) (60 samples, 0.10%)</title><rect x="63.0867%" y="308" width="0.1040%" height="15" fill="rgb(232,45,27)" fg:x="36384" fg:w="60"/><text x="63.3367%" y="318.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:60) (75 samples, 0.13%)</title><rect x="63.3381%" y="340" width="0.1300%" height="15" fill="rgb(249,103,42)" fg:x="36529" fg:w="75"/><text x="63.5881%" y="350.50"></text></g><g><title>discrete_dynamics (3_agents_Simulation_decentralized.py:47) (307 samples, 0.53%)</title><rect x="62.9948%" y="292" width="0.5323%" height="15" fill="rgb(246,81,33)" fg:x="36331" fg:w="307"/><text x="63.2448%" y="302.50"></text></g><g><title>unicycle_continuous_dynamics (3_agents_Simulation_decentralized.py:32) (134 samples, 0.23%)</title><rect x="63.2948%" y="308" width="0.2323%" height="15" fill="rgb(252,33,42)" fg:x="36504" fg:w="134"/><text x="63.5448%" y="318.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (128 samples, 0.22%)</title><rect x="63.3052%" y="324" width="0.2219%" height="15" fill="rgb(209,212,41)" fg:x="36510" fg:w="128"/><text x="63.5552%" y="334.50"></text></g><g><title>trace (autograd/tracer.py:10) (436 samples, 0.76%)</title><rect x="62.8266%" y="212" width="0.7560%" height="15" fill="rgb(207,154,6)" fg:x="36234" fg:w="436"/><text x="63.0766%" y="222.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (435 samples, 0.75%)</title><rect x="62.8284%" y="228" width="0.7543%" height="15" fill="rgb(223,64,47)" fg:x="36235" fg:w="435"/><text x="63.0784%" y="238.50"></text></g><g><title>f (3_agents_Simulation_decentralized.py:207) (435 samples, 0.75%)</title><rect x="62.8284%" y="244" width="0.7543%" height="15" fill="rgb(211,161,38)" fg:x="36235" fg:w="435"/><text x="63.0784%" y="254.50"></text></g><g><title>discrete_dynamics_multiple (3_agents_Simulation_decentralized.py:58) (350 samples, 0.61%)</title><rect x="62.9757%" y="260" width="0.6069%" height="15" fill="rgb(219,138,40)" fg:x="36320" fg:w="350"/><text x="63.2257%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (3_agents_Simulation_decentralized.py:58) (348 samples, 0.60%)</title><rect x="62.9792%" y="276" width="0.6034%" height="15" fill="rgb(241,228,46)" fg:x="36322" fg:w="348"/><text x="63.2292%" y="286.50"></text></g><g><title>make_vjp (autograd/core.py:10) (443 samples, 0.77%)</title><rect x="62.8266%" y="196" width="0.7681%" height="15" fill="rgb(223,209,38)" fg:x="36234" fg:w="443"/><text x="63.0766%" y="206.50"></text></g><g><title>jacobian (autograd/differential_operators.py:57) (444 samples, 0.77%)</title><rect x="62.8266%" y="180" width="0.7699%" height="15" fill="rgb(236,164,45)" fg:x="36234" fg:w="444"/><text x="63.0766%" y="190.50"></text></g><g><title>standard_basis (autograd/numpy/numpy_vspaces.py:18) (59 samples, 0.10%)</title><rect x="63.7647%" y="228" width="0.1023%" height="15" fill="rgb(231,15,5)" fg:x="36775" fg:w="59"/><text x="64.0147%" y="238.50"></text></g><g><title>toposort (autograd/util.py:29) (68 samples, 0.12%)</title><rect x="64.0924%" y="260" width="0.1179%" height="15" fill="rgb(252,35,15)" fg:x="36964" fg:w="68"/><text x="64.3424%" y="270.50"></text></g><g><title>backward_pass (autograd/core.py:19) (371 samples, 0.64%)</title><rect x="63.9069%" y="244" width="0.6433%" height="15" fill="rgb(248,181,18)" fg:x="36857" fg:w="371"/><text x="64.1569%" y="254.50"></text></g><g><title>reshape (&lt;__array_function__ internals&gt;:5) (75 samples, 0.13%)</title><rect x="65.0616%" y="308" width="0.1300%" height="15" fill="rgb(233,39,42)" fg:x="37523" fg:w="75"/><text x="65.3116%" y="318.50"></text></g><g><title>reshape (numpy/core/fromnumeric.py:298) (64 samples, 0.11%)</title><rect x="65.0807%" y="324" width="0.1110%" height="15" fill="rgb(238,110,33)" fg:x="37534" fg:w="64"/><text x="65.3307%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (94 samples, 0.16%)</title><rect x="65.0322%" y="292" width="0.1630%" height="15" fill="rgb(233,195,10)" fg:x="37506" fg:w="94"/><text x="65.2822%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:582) (224 samples, 0.39%)</title><rect x="64.9403%" y="276" width="0.3884%" height="15" fill="rgb(254,105,3)" fg:x="37453" fg:w="224"/><text x="65.1903%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (69 samples, 0.12%)</title><rect x="65.2090%" y="292" width="0.1196%" height="15" fill="rgb(221,225,9)" fg:x="37608" fg:w="69"/><text x="65.4590%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:35) (115 samples, 0.20%)</title><rect x="65.3547%" y="292" width="0.1994%" height="15" fill="rgb(224,227,45)" fg:x="37692" fg:w="115"/><text x="65.6047%" y="302.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:649) (114 samples, 0.20%)</title><rect x="65.5627%" y="292" width="0.1977%" height="15" fill="rgb(229,198,43)" fg:x="37812" fg:w="114"/><text x="65.8127%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (72 samples, 0.12%)</title><rect x="65.6356%" y="308" width="0.1248%" height="15" fill="rgb(206,209,35)" fg:x="37854" fg:w="72"/><text x="65.8856%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (368 samples, 0.64%)</title><rect x="65.3287%" y="276" width="0.6381%" height="15" fill="rgb(245,195,53)" fg:x="37677" fg:w="368"/><text x="65.5787%" y="286.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:654) (98 samples, 0.17%)</title><rect x="65.7968%" y="292" width="0.1699%" height="15" fill="rgb(240,92,26)" fg:x="37947" fg:w="98"/><text x="66.0468%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (73 samples, 0.13%)</title><rect x="65.8402%" y="308" width="0.1266%" height="15" fill="rgb(207,40,23)" fg:x="37972" fg:w="73"/><text x="66.0902%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (121 samples, 0.21%)</title><rect x="66.0500%" y="292" width="0.2098%" height="15" fill="rgb(223,111,35)" fg:x="38093" fg:w="121"/><text x="66.3000%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (88 samples, 0.15%)</title><rect x="66.2667%" y="292" width="0.1526%" height="15" fill="rgb(229,147,28)" fg:x="38218" fg:w="88"/><text x="66.5167%" y="302.50"></text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;:5) (64 samples, 0.11%)</title><rect x="66.5858%" y="324" width="0.1110%" height="15" fill="rgb(211,29,28)" fg:x="38402" fg:w="64"/><text x="66.8358%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:58) (115 samples, 0.20%)</title><rect x="66.5025%" y="308" width="0.1994%" height="15" fill="rgb(228,72,33)" fg:x="38354" fg:w="115"/><text x="66.7525%" y="318.50"></text></g><g><title>backward_pass (autograd/core.py:21) (1,279 samples, 2.22%)</title><rect x="64.6455%" y="244" width="2.2177%" height="15" fill="rgb(205,214,31)" fg:x="37283" fg:w="1279"/><text x="64.8955%" y="254.50">b..</text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (1,152 samples, 2.00%)</title><rect x="64.8657%" y="260" width="1.9975%" height="15" fill="rgb(224,111,15)" fg:x="37410" fg:w="1152"/><text x="65.1157%" y="270.50">&lt;..</text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:701) (515 samples, 0.89%)</title><rect x="65.9702%" y="276" width="0.8930%" height="15" fill="rgb(253,21,26)" fg:x="38047" fg:w="515"/><text x="66.2202%" y="286.50"></text></g><g><title>vspace (autograd/core.py:233) (255 samples, 0.44%)</title><rect x="66.4210%" y="292" width="0.4421%" height="15" fill="rgb(245,139,43)" fg:x="38307" fg:w="255"/><text x="66.6710%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:59) (93 samples, 0.16%)</title><rect x="66.7019%" y="308" width="0.1613%" height="15" fill="rgb(252,170,7)" fg:x="38469" fg:w="93"/><text x="66.9519%" y="318.50"></text></g><g><title>backward_pass (autograd/core.py:22) (214 samples, 0.37%)</title><rect x="66.8632%" y="244" width="0.3711%" height="15" fill="rgb(231,118,14)" fg:x="38562" fg:w="214"/><text x="67.1132%" y="254.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (303 samples, 0.53%)</title><rect x="67.6885%" y="308" width="0.5254%" height="15" fill="rgb(238,83,0)" fg:x="39038" fg:w="303"/><text x="67.9385%" y="318.50"></text></g><g><title>add_outgrads (autograd/core.py:165) (386 samples, 0.67%)</title><rect x="67.5463%" y="260" width="0.6693%" height="15" fill="rgb(221,39,39)" fg:x="38956" fg:w="386"/><text x="67.7963%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (331 samples, 0.57%)</title><rect x="67.6417%" y="276" width="0.5739%" height="15" fill="rgb(222,119,46)" fg:x="39011" fg:w="331"/><text x="67.8917%" y="286.50"></text></g><g><title>sparse_add (autograd/core.py:186) (315 samples, 0.55%)</title><rect x="67.6694%" y="292" width="0.5462%" height="15" fill="rgb(222,165,49)" fg:x="39027" fg:w="315"/><text x="67.9194%" y="302.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (298 samples, 0.52%)</title><rect x="68.3960%" y="308" width="0.5167%" height="15" fill="rgb(219,113,52)" fg:x="39446" fg:w="298"/><text x="68.6460%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (350 samples, 0.61%)</title><rect x="68.3075%" y="276" width="0.6069%" height="15" fill="rgb(214,7,15)" fg:x="39395" fg:w="350"/><text x="68.5575%" y="286.50"></text></g><g><title>sparse_add (autograd/core.py:186) (310 samples, 0.54%)</title><rect x="68.3769%" y="292" width="0.5375%" height="15" fill="rgb(235,32,4)" fg:x="39435" fg:w="310"/><text x="68.6269%" y="302.50"></text></g><g><title>add_outgrads (autograd/core.py:176) (414 samples, 0.72%)</title><rect x="68.2208%" y="260" width="0.7178%" height="15" fill="rgb(238,90,54)" fg:x="39345" fg:w="414"/><text x="68.4708%" y="270.50"></text></g><g><title>backward_pass (autograd/core.py:23) (987 samples, 1.71%)</title><rect x="67.2342%" y="244" width="1.7114%" height="15" fill="rgb(213,208,19)" fg:x="38776" fg:w="987"/><text x="67.4842%" y="254.50"></text></g><g><title>stack (autograd/numpy/numpy_wrapper.py:88) (3,053 samples, 5.29%)</title><rect x="63.6537%" y="196" width="5.2936%" height="15" fill="rgb(233,156,4)" fg:x="36711" fg:w="3053"/><text x="63.9037%" y="206.50">stack ..</text></g><g><title>&lt;listcomp&gt; (autograd/numpy/numpy_wrapper.py:88) (3,052 samples, 5.29%)</title><rect x="63.6554%" y="212" width="5.2919%" height="15" fill="rgb(207,194,5)" fg:x="36712" fg:w="3052"/><text x="63.9054%" y="222.50">&lt;listc..</text></g><g><title>vjp (autograd/core.py:14) (2,916 samples, 5.06%)</title><rect x="63.8912%" y="228" width="5.0561%" height="15" fill="rgb(206,111,30)" fg:x="36848" fg:w="2916"/><text x="64.1412%" y="238.50">vjp (a..</text></g><g><title>nary_f (autograd/wrap_util.py:20) (3,537 samples, 6.13%)</title><rect x="62.8162%" y="164" width="6.1329%" height="15" fill="rgb(243,70,54)" fg:x="36228" fg:w="3537"/><text x="63.0662%" y="174.50">nary_f (..</text></g><g><title>jacobian (autograd/differential_operators.py:61) (3,077 samples, 5.34%)</title><rect x="63.6138%" y="180" width="5.3353%" height="15" fill="rgb(242,28,8)" fg:x="36688" fg:w="3077"/><text x="63.8638%" y="190.50">jacobia..</text></g><g><title>f_u (3_agents_Simulation_decentralized.py:217) (3,556 samples, 6.17%)</title><rect x="62.8058%" y="148" width="6.1658%" height="15" fill="rgb(219,106,18)" fg:x="36222" fg:w="3556"/><text x="63.0558%" y="158.50">f_u (3_a..</text></g><g><title>discrete_dynamics_multiple (3_agents_Simulation_decentralized.py:57) (63 samples, 0.11%)</title><rect x="69.0063%" y="260" width="0.1092%" height="15" fill="rgb(244,222,10)" fg:x="39798" fg:w="63"/><text x="69.2563%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (72 samples, 0.12%)</title><rect x="69.3826%" y="340" width="0.1248%" height="15" fill="rgb(236,179,52)" fg:x="40015" fg:w="72"/><text x="69.6326%" y="350.50"></text></g><g><title>__init__ (autograd/core.py:36) (68 samples, 0.12%)</title><rect x="69.3895%" y="356" width="0.1179%" height="15" fill="rgb(213,23,39)" fg:x="40019" fg:w="68"/><text x="69.6395%" y="366.50"></text></g><g><title>__mul__ (autograd/numpy/numpy_boxes.py:27) (104 samples, 0.18%)</title><rect x="69.3340%" y="324" width="0.1803%" height="15" fill="rgb(238,48,10)" fg:x="39987" fg:w="104"/><text x="69.5840%" y="334.50"></text></g><g><title>unicycle_continuous_dynamics (3_agents_Simulation_decentralized.py:28) (181 samples, 0.31%)</title><rect x="69.3236%" y="308" width="0.3138%" height="15" fill="rgb(251,196,23)" fg:x="39981" fg:w="181"/><text x="69.5736%" y="318.50"></text></g><g><title>__mul__ (autograd/numpy/numpy_boxes.py:27) (74 samples, 0.13%)</title><rect x="69.6478%" y="324" width="0.1283%" height="15" fill="rgb(250,152,24)" fg:x="40168" fg:w="74"/><text x="69.8978%" y="334.50"></text></g><g><title>unicycle_continuous_dynamics (3_agents_Simulation_decentralized.py:29) (148 samples, 0.26%)</title><rect x="69.6374%" y="308" width="0.2566%" height="15" fill="rgb(209,150,17)" fg:x="40162" fg:w="148"/><text x="69.8874%" y="318.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:60) (67 samples, 0.12%)</title><rect x="69.9322%" y="340" width="0.1162%" height="15" fill="rgb(234,202,34)" fg:x="40332" fg:w="67"/><text x="70.1822%" y="350.50"></text></g><g><title>discrete_dynamics (3_agents_Simulation_decentralized.py:47) (557 samples, 0.97%)</title><rect x="69.1277%" y="292" width="0.9658%" height="15" fill="rgb(253,148,53)" fg:x="39868" fg:w="557"/><text x="69.3777%" y="302.50"></text></g><g><title>unicycle_continuous_dynamics (3_agents_Simulation_decentralized.py:32) (114 samples, 0.20%)</title><rect x="69.8958%" y="308" width="0.1977%" height="15" fill="rgb(218,129,16)" fg:x="40311" fg:w="114"/><text x="70.1458%" y="318.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (111 samples, 0.19%)</title><rect x="69.9010%" y="324" width="0.1925%" height="15" fill="rgb(216,85,19)" fg:x="40314" fg:w="111"/><text x="70.1510%" y="334.50"></text></g><g><title>trace (autograd/tracer.py:10) (650 samples, 1.13%)</title><rect x="68.9994%" y="212" width="1.1270%" height="15" fill="rgb(235,228,7)" fg:x="39794" fg:w="650"/><text x="69.2494%" y="222.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (646 samples, 1.12%)</title><rect x="69.0063%" y="228" width="1.1201%" height="15" fill="rgb(245,175,0)" fg:x="39798" fg:w="646"/><text x="69.2563%" y="238.50"></text></g><g><title>f (3_agents_Simulation_decentralized.py:207) (646 samples, 1.12%)</title><rect x="69.0063%" y="244" width="1.1201%" height="15" fill="rgb(208,168,36)" fg:x="39798" fg:w="646"/><text x="69.2563%" y="254.50"></text></g><g><title>discrete_dynamics_multiple (3_agents_Simulation_decentralized.py:58) (583 samples, 1.01%)</title><rect x="69.1155%" y="260" width="1.0109%" height="15" fill="rgb(246,171,24)" fg:x="39861" fg:w="583"/><text x="69.3655%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (3_agents_Simulation_decentralized.py:58) (579 samples, 1.00%)</title><rect x="69.1225%" y="276" width="1.0039%" height="15" fill="rgb(215,142,24)" fg:x="39865" fg:w="579"/><text x="69.3725%" y="286.50"></text></g><g><title>make_vjp (autograd/core.py:10) (661 samples, 1.15%)</title><rect x="68.9994%" y="196" width="1.1461%" height="15" fill="rgb(250,187,7)" fg:x="39794" fg:w="661"/><text x="69.2494%" y="206.50"></text></g><g><title>jacobian (autograd/differential_operators.py:57) (662 samples, 1.15%)</title><rect x="68.9994%" y="180" width="1.1479%" height="15" fill="rgb(228,66,33)" fg:x="39794" fg:w="662"/><text x="69.2494%" y="190.50"></text></g><g><title>standard_basis (autograd/numpy/numpy_vspaces.py:18) (78 samples, 0.14%)</title><rect x="70.3310%" y="228" width="0.1352%" height="15" fill="rgb(234,215,21)" fg:x="40562" fg:w="78"/><text x="70.5810%" y="238.50"></text></g><g><title>toposort (autograd/util.py:29) (79 samples, 0.14%)</title><rect x="70.8477%" y="260" width="0.1370%" height="15" fill="rgb(222,191,20)" fg:x="40860" fg:w="79"/><text x="71.0977%" y="270.50"></text></g><g><title>toposort (autograd/util.py:35) (86 samples, 0.15%)</title><rect x="71.1355%" y="260" width="0.1491%" height="15" fill="rgb(245,79,54)" fg:x="41026" fg:w="86"/><text x="71.3855%" y="270.50"></text></g><g><title>toposort (autograd/util.py:36) (89 samples, 0.15%)</title><rect x="71.2847%" y="260" width="0.1543%" height="15" fill="rgb(240,10,37)" fg:x="41112" fg:w="89"/><text x="71.5347%" y="270.50"></text></g><g><title>toposort (autograd/util.py:37) (67 samples, 0.12%)</title><rect x="71.4390%" y="260" width="0.1162%" height="15" fill="rgb(214,192,32)" fg:x="41201" fg:w="67"/><text x="71.6890%" y="270.50"></text></g><g><title>backward_pass (autograd/core.py:19) (627 samples, 1.09%)</title><rect x="70.5165%" y="244" width="1.0872%" height="15" fill="rgb(209,36,54)" fg:x="40669" fg:w="627"/><text x="70.7665%" y="254.50"></text></g><g><title>backward_pass (autograd/core.py:20) (81 samples, 0.14%)</title><rect x="71.6037%" y="244" width="0.1404%" height="15" fill="rgb(220,10,11)" fg:x="41296" fg:w="81"/><text x="71.8537%" y="254.50"></text></g><g><title>reshape (&lt;__array_function__ internals&gt;:5) (84 samples, 0.15%)</title><rect x="72.3302%" y="308" width="0.1456%" height="15" fill="rgb(221,106,17)" fg:x="41715" fg:w="84"/><text x="72.5802%" y="318.50"></text></g><g><title>reshape (numpy/core/fromnumeric.py:298) (69 samples, 0.12%)</title><rect x="72.3562%" y="324" width="0.1196%" height="15" fill="rgb(251,142,44)" fg:x="41730" fg:w="69"/><text x="72.6062%" y="334.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (104 samples, 0.18%)</title><rect x="72.2973%" y="292" width="0.1803%" height="15" fill="rgb(238,13,15)" fg:x="41696" fg:w="104"/><text x="72.5473%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:582) (250 samples, 0.43%)</title><rect x="72.1846%" y="276" width="0.4335%" height="15" fill="rgb(208,107,27)" fg:x="41631" fg:w="250"/><text x="72.4346%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (67 samples, 0.12%)</title><rect x="72.5019%" y="292" width="0.1162%" height="15" fill="rgb(205,136,37)" fg:x="41814" fg:w="67"/><text x="72.7519%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:35) (102 samples, 0.18%)</title><rect x="72.6354%" y="292" width="0.1769%" height="15" fill="rgb(250,205,27)" fg:x="41891" fg:w="102"/><text x="72.8854%" y="302.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:649) (69 samples, 0.12%)</title><rect x="72.8140%" y="292" width="0.1196%" height="15" fill="rgb(210,80,43)" fg:x="41994" fg:w="69"/><text x="73.0640%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (234 samples, 0.41%)</title><rect x="72.6180%" y="276" width="0.4057%" height="15" fill="rgb(247,160,36)" fg:x="41881" fg:w="234"/><text x="72.8680%" y="286.50"></text></g><g><title>find_top_boxed_args (autograd/tracer.py:70) (72 samples, 0.12%)</title><rect x="73.3047%" y="308" width="0.1248%" height="15" fill="rgb(234,13,49)" fg:x="42277" fg:w="72"/><text x="73.5547%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (180 samples, 0.31%)</title><rect x="73.1382%" y="292" width="0.3121%" height="15" fill="rgb(234,122,0)" fg:x="42181" fg:w="180"/><text x="73.3882%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (174 samples, 0.30%)</title><rect x="73.4607%" y="292" width="0.3017%" height="15" fill="rgb(207,146,38)" fg:x="42367" fg:w="174"/><text x="73.7107%" y="302.50"></text></g><g><title>untake (autograd/numpy/numpy_vjps.py:700) (83 samples, 0.14%)</title><rect x="73.6185%" y="308" width="0.1439%" height="15" fill="rgb(207,177,25)" fg:x="42458" fg:w="83"/><text x="73.8685%" y="318.50"></text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;:5) (119 samples, 0.21%)</title><rect x="74.0173%" y="324" width="0.2063%" height="15" fill="rgb(211,178,42)" fg:x="42688" fg:w="119"/><text x="74.2673%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:58) (211 samples, 0.37%)</title><rect x="73.8613%" y="308" width="0.3659%" height="15" fill="rgb(230,69,54)" fg:x="42598" fg:w="211"/><text x="74.1113%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:701) (873 samples, 1.51%)</title><rect x="73.0272%" y="276" width="1.5137%" height="15" fill="rgb(214,135,41)" fg:x="42117" fg:w="873"/><text x="73.2772%" y="286.50"></text></g><g><title>vspace (autograd/core.py:233) (448 samples, 0.78%)</title><rect x="73.7642%" y="292" width="0.7768%" height="15" fill="rgb(237,67,25)" fg:x="42542" fg:w="448"/><text x="74.0142%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:59) (181 samples, 0.31%)</title><rect x="74.2271%" y="308" width="0.3138%" height="15" fill="rgb(222,189,50)" fg:x="42809" fg:w="181"/><text x="74.4771%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:82) (158 samples, 0.27%)</title><rect x="74.5409%" y="276" width="0.2740%" height="15" fill="rgb(245,148,34)" fg:x="42990" fg:w="158"/><text x="74.7909%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (125 samples, 0.22%)</title><rect x="74.5982%" y="292" width="0.2167%" height="15" fill="rgb(222,29,6)" fg:x="43023" fg:w="125"/><text x="74.8482%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (1,762 samples, 3.06%)</title><rect x="72.0649%" y="260" width="3.0552%" height="15" fill="rgb(221,189,43)" fg:x="41562" fg:w="1762"/><text x="72.3149%" y="270.50">&lt;la..</text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:83) (176 samples, 0.31%)</title><rect x="74.8149%" y="276" width="0.3052%" height="15" fill="rgb(207,36,27)" fg:x="43148" fg:w="176"/><text x="75.0649%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (106 samples, 0.18%)</title><rect x="74.9363%" y="292" width="0.1838%" height="15" fill="rgb(217,90,24)" fg:x="43218" fg:w="106"/><text x="75.1863%" y="302.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:5) (192 samples, 0.33%)</title><rect x="75.8344%" y="324" width="0.3329%" height="15" fill="rgb(224,66,35)" fg:x="43736" fg:w="192"/><text x="76.0844%" y="334.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:649) (484 samples, 0.84%)</title><rect x="75.3368%" y="292" width="0.8392%" height="15" fill="rgb(221,13,50)" fg:x="43449" fg:w="484"/><text x="75.5868%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (379 samples, 0.66%)</title><rect x="75.5189%" y="308" width="0.6572%" height="15" fill="rgb(236,68,49)" fg:x="43554" fg:w="379"/><text x="75.7689%" y="318.50"></text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;:5) (167 samples, 0.29%)</title><rect x="76.6771%" y="324" width="0.2896%" height="15" fill="rgb(229,146,28)" fg:x="44222" fg:w="167"/><text x="76.9271%" y="334.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:654) (402 samples, 0.70%)</title><rect x="76.2835%" y="292" width="0.6970%" height="15" fill="rgb(225,31,38)" fg:x="43995" fg:w="402"/><text x="76.5335%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (328 samples, 0.57%)</title><rect x="76.4118%" y="308" width="0.5687%" height="15" fill="rgb(250,208,3)" fg:x="44069" fg:w="328"/><text x="76.6618%" y="318.50"></text></g><g><title>backward_pass (autograd/core.py:21) (3,022 samples, 5.24%)</title><rect x="71.7441%" y="244" width="5.2399%" height="15" fill="rgb(246,54,23)" fg:x="41377" fg:w="3022"/><text x="71.9941%" y="254.50">backwa..</text></g><g><title>&lt;lambda&gt; (autograd/core.py:78) (1,075 samples, 1.86%)</title><rect x="75.1201%" y="260" width="1.8640%" height="15" fill="rgb(243,76,11)" fg:x="43324" fg:w="1075"/><text x="75.3701%" y="270.50">&lt;..</text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (1,048 samples, 1.82%)</title><rect x="75.1669%" y="276" width="1.8171%" height="15" fill="rgb(245,21,50)" fg:x="43351" fg:w="1048"/><text x="75.4169%" y="286.50">&lt;..</text></g><g><title>backward_pass (autograd/core.py:22) (345 samples, 0.60%)</title><rect x="76.9840%" y="244" width="0.5982%" height="15" fill="rgb(228,9,43)" fg:x="44399" fg:w="345"/><text x="77.2340%" y="254.50"></text></g><g><title>add_outgrads (autograd/core.py:159) (65 samples, 0.11%)</title><rect x="77.9342%" y="260" width="0.1127%" height="15" fill="rgb(208,100,47)" fg:x="44947" fg:w="65"/><text x="78.1842%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (114 samples, 0.20%)</title><rect x="78.2429%" y="276" width="0.1977%" height="15" fill="rgb(232,26,8)" fg:x="45125" fg:w="114"/><text x="78.4929%" y="286.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (638 samples, 1.11%)</title><rect x="78.5203%" y="308" width="1.1062%" height="15" fill="rgb(216,166,38)" fg:x="45285" fg:w="638"/><text x="78.7703%" y="318.50"></text></g><g><title>add_outgrads (autograd/core.py:165) (840 samples, 1.46%)</title><rect x="78.1752%" y="260" width="1.4565%" height="15" fill="rgb(251,202,51)" fg:x="45086" fg:w="840"/><text x="78.4252%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (684 samples, 1.19%)</title><rect x="78.4457%" y="276" width="1.1860%" height="15" fill="rgb(254,216,34)" fg:x="45242" fg:w="684"/><text x="78.6957%" y="286.50"></text></g><g><title>sparse_add (autograd/core.py:186) (656 samples, 1.14%)</title><rect x="78.4943%" y="292" width="1.1374%" height="15" fill="rgb(251,32,27)" fg:x="45270" fg:w="656"/><text x="78.7443%" y="302.50"></text></g><g><title>add_outgrads (autograd/core.py:170) (206 samples, 0.36%)</title><rect x="79.6352%" y="260" width="0.3572%" height="15" fill="rgb(208,127,28)" fg:x="45928" fg:w="206"/><text x="79.8852%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (157 samples, 0.27%)</title><rect x="79.7201%" y="276" width="0.2722%" height="15" fill="rgb(224,137,22)" fg:x="45977" fg:w="157"/><text x="79.9701%" y="286.50"></text></g><g><title>mut_add (autograd/core.py:202) (116 samples, 0.20%)</title><rect x="79.7912%" y="292" width="0.2011%" height="15" fill="rgb(254,70,32)" fg:x="46018" fg:w="116"/><text x="80.0412%" y="302.50"></text></g><g><title>_mut_add (autograd/core.py:213) (110 samples, 0.19%)</title><rect x="79.8016%" y="308" width="0.1907%" height="15" fill="rgb(229,75,37)" fg:x="46024" fg:w="110"/><text x="80.0516%" y="318.50"></text></g><g><title>add_outgrads (autograd/core.py:171) (280 samples, 0.49%)</title><rect x="79.9924%" y="260" width="0.4855%" height="15" fill="rgb(252,64,23)" fg:x="46134" fg:w="280"/><text x="80.2424%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (228 samples, 0.40%)</title><rect x="80.0825%" y="276" width="0.3953%" height="15" fill="rgb(232,162,48)" fg:x="46186" fg:w="228"/><text x="80.3325%" y="286.50"></text></g><g><title>sparse_add (autograd/core.py:186) (213 samples, 0.37%)</title><rect x="80.1085%" y="292" width="0.3693%" height="15" fill="rgb(246,160,12)" fg:x="46201" fg:w="213"/><text x="80.3585%" y="302.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (203 samples, 0.35%)</title><rect x="80.1259%" y="308" width="0.3520%" height="15" fill="rgb(247,166,0)" fg:x="46211" fg:w="203"/><text x="80.3759%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (65 samples, 0.11%)</title><rect x="80.5195%" y="276" width="0.1127%" height="15" fill="rgb(249,219,21)" fg:x="46438" fg:w="65"/><text x="80.7695%" y="286.50"></text></g><g><title>add_outgrads (autograd/core.py:176) (82 samples, 0.14%)</title><rect x="80.4952%" y="260" width="0.1422%" height="15" fill="rgb(205,209,3)" fg:x="46424" fg:w="82"/><text x="80.7452%" y="270.50"></text></g><g><title>stack (autograd/numpy/numpy_wrapper.py:88) (6,023 samples, 10.44%)</title><rect x="70.2183%" y="196" width="10.4434%" height="15" fill="rgb(243,44,1)" fg:x="40497" fg:w="6023"/><text x="70.4683%" y="206.50">stack (autograd..</text></g><g><title>&lt;listcomp&gt; (autograd/numpy/numpy_wrapper.py:88) (6,022 samples, 10.44%)</title><rect x="70.2200%" y="212" width="10.4416%" height="15" fill="rgb(206,159,16)" fg:x="40498" fg:w="6022"/><text x="70.4700%" y="222.50">&lt;listcomp&gt; (aut..</text></g><g><title>vjp (autograd/core.py:14) (5,857 samples, 10.16%)</title><rect x="70.5061%" y="228" width="10.1555%" height="15" fill="rgb(244,77,30)" fg:x="40663" fg:w="5857"/><text x="70.7561%" y="238.50">vjp (autograd/c..</text></g><g><title>backward_pass (autograd/core.py:23) (1,776 samples, 3.08%)</title><rect x="77.5822%" y="244" width="3.0794%" height="15" fill="rgb(218,69,12)" fg:x="44744" fg:w="1776"/><text x="77.8322%" y="254.50">bac..</text></g><g><title>nary_f (autograd/wrap_util.py:20) (6,741 samples, 11.69%)</title><rect x="68.9803%" y="164" width="11.6883%" height="15" fill="rgb(212,87,7)" fg:x="39783" fg:w="6741"/><text x="69.2303%" y="174.50">nary_f (autograd/..</text></g><g><title>jacobian (autograd/differential_operators.py:61) (6,056 samples, 10.50%)</title><rect x="70.1680%" y="180" width="10.5006%" height="15" fill="rgb(245,114,25)" fg:x="40468" fg:w="6056"/><text x="70.4180%" y="190.50">jacobian (autog..</text></g><g><title>f_x (3_agents_Simulation_decentralized.py:211) (6,763 samples, 11.73%)</title><rect x="68.9716%" y="148" width="11.7265%" height="15" fill="rgb(210,61,42)" fg:x="39778" fg:w="6763"/><text x="69.2216%" y="158.50">f_x (3_agents_Sim..</text></g><g><title>cost_avoidance (3_agents_Simulation_decentralized.py:134) (190 samples, 0.33%)</title><rect x="80.7588%" y="356" width="0.3294%" height="15" fill="rgb(211,52,33)" fg:x="46576" fg:w="190"/><text x="81.0088%" y="366.50"></text></g><g><title>cost_stage (3_agents_Simulation_decentralized.py:143) (351 samples, 0.61%)</title><rect x="80.7588%" y="340" width="0.6086%" height="15" fill="rgb(234,58,33)" fg:x="46576" fg:w="351"/><text x="81.0088%" y="350.50"></text></g><g><title>cost_avoidance (3_agents_Simulation_decentralized.py:136) (161 samples, 0.28%)</title><rect x="81.0882%" y="356" width="0.2792%" height="15" fill="rgb(220,115,36)" fg:x="46766" fg:w="161"/><text x="81.3382%" y="366.50"></text></g><g><title>__matmul__ (autograd/numpy/numpy_boxes.py:32) (114 samples, 0.20%)</title><rect x="81.5702%" y="372" width="0.1977%" height="15" fill="rgb(243,153,54)" fg:x="47044" fg:w="114"/><text x="81.8202%" y="382.50"></text></g><g><title>cost_stage (3_agents_Simulation_decentralized.py:144) (263 samples, 0.46%)</title><rect x="81.3674%" y="340" width="0.4560%" height="15" fill="rgb(251,47,18)" fg:x="46927" fg:w="263"/><text x="81.6174%" y="350.50"></text></g><g><title>cost_trj (3_agents_Simulation_decentralized.py:92) (222 samples, 0.38%)</title><rect x="81.4385%" y="356" width="0.3849%" height="15" fill="rgb(242,102,42)" fg:x="46968" fg:w="222"/><text x="81.6885%" y="366.50"></text></g><g><title>trace (autograd/tracer.py:10) (663 samples, 1.15%)</title><rect x="80.7536%" y="308" width="1.1496%" height="15" fill="rgb(234,31,38)" fg:x="46573" fg:w="663"/><text x="81.0036%" y="318.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (662 samples, 1.15%)</title><rect x="80.7553%" y="324" width="1.1479%" height="15" fill="rgb(221,117,51)" fg:x="46574" fg:w="662"/><text x="81.0053%" y="334.50"></text></g><g><title>make_vjp (autograd/core.py:10) (670 samples, 1.16%)</title><rect x="80.7518%" y="292" width="1.1617%" height="15" fill="rgb(212,20,18)" fg:x="46572" fg:w="670"/><text x="81.0018%" y="302.50"></text></g><g><title>elementwise_grad (autograd/differential_operators.py:38) (673 samples, 1.17%)</title><rect x="80.7484%" y="276" width="1.1669%" height="15" fill="rgb(245,133,36)" fg:x="46570" fg:w="673"/><text x="80.9984%" y="286.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:418) (66 samples, 0.11%)</title><rect x="81.9742%" y="340" width="0.1144%" height="15" fill="rgb(212,6,19)" fg:x="47277" fg:w="66"/><text x="82.2242%" y="350.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (80 samples, 0.14%)</title><rect x="81.9656%" y="324" width="0.1387%" height="15" fill="rgb(218,1,36)" fg:x="47272" fg:w="80"/><text x="82.2156%" y="334.50"></text></g><g><title>backward_pass (autograd/core.py:21) (96 samples, 0.17%)</title><rect x="81.9638%" y="308" width="0.1665%" height="15" fill="rgb(246,84,54)" fg:x="47271" fg:w="96"/><text x="82.2138%" y="318.50"></text></g><g><title>vjp (autograd/core.py:14) (128 samples, 0.22%)</title><rect x="81.9396%" y="292" width="0.2219%" height="15" fill="rgb(242,110,6)" fg:x="47257" fg:w="128"/><text x="82.1896%" y="302.50"></text></g><g><title>nary_f (autograd/wrap_util.py:20) (831 samples, 1.44%)</title><rect x="80.7241%" y="260" width="1.4409%" height="15" fill="rgb(214,47,5)" fg:x="46556" fg:w="831"/><text x="80.9741%" y="270.50"></text></g><g><title>elementwise_grad (autograd/differential_operators.py:41) (142 samples, 0.25%)</title><rect x="81.9187%" y="276" width="0.2462%" height="15" fill="rgb(218,159,25)" fg:x="47245" fg:w="142"/><text x="82.1687%" y="286.50"></text></g><g><title>trace (autograd/tracer.py:10) (837 samples, 1.45%)</title><rect x="80.7154%" y="212" width="1.4513%" height="15" fill="rgb(215,211,28)" fg:x="46551" fg:w="837"/><text x="80.9654%" y="222.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (835 samples, 1.45%)</title><rect x="80.7189%" y="228" width="1.4478%" height="15" fill="rgb(238,59,32)" fg:x="46553" fg:w="835"/><text x="80.9689%" y="238.50"></text></g><g><title>l_u (3_agents_Simulation_decentralized.py:175) (835 samples, 1.45%)</title><rect x="80.7189%" y="244" width="1.4478%" height="15" fill="rgb(226,82,3)" fg:x="46553" fg:w="835"/><text x="80.9689%" y="254.50"></text></g><g><title>make_vjp (autograd/core.py:10) (854 samples, 1.48%)</title><rect x="80.7102%" y="196" width="1.4808%" height="15" fill="rgb(240,164,32)" fg:x="46548" fg:w="854"/><text x="80.9602%" y="206.50"></text></g><g><title>jacobian (autograd/differential_operators.py:57) (859 samples, 1.49%)</title><rect x="80.7102%" y="180" width="1.4894%" height="15" fill="rgb(232,46,7)" fg:x="46548" fg:w="859"/><text x="80.9602%" y="190.50"></text></g><g><title>stack (autograd/numpy/numpy_wrapper.py:88) (107 samples, 0.19%)</title><rect x="82.2569%" y="196" width="0.1855%" height="15" fill="rgb(229,129,53)" fg:x="47440" fg:w="107"/><text x="82.5069%" y="206.50"></text></g><g><title>&lt;listcomp&gt; (autograd/numpy/numpy_wrapper.py:88) (105 samples, 0.18%)</title><rect x="82.2603%" y="212" width="0.1821%" height="15" fill="rgb(234,188,29)" fg:x="47442" fg:w="105"/><text x="82.5103%" y="222.50"></text></g><g><title>nary_f (autograd/wrap_util.py:20) (1,009 samples, 1.75%)</title><rect x="80.7050%" y="164" width="1.7495%" height="15" fill="rgb(246,141,4)" fg:x="46545" fg:w="1009"/><text x="80.9550%" y="174.50"></text></g><g><title>jacobian (autograd/differential_operators.py:61) (137 samples, 0.24%)</title><rect x="82.2170%" y="180" width="0.2375%" height="15" fill="rgb(229,23,39)" fg:x="47417" fg:w="137"/><text x="82.4670%" y="190.50"></text></g><g><title>Q_terms (3_agents_Simulation_decentralized.py:245) (11,374 samples, 19.72%)</title><rect x="62.7538%" y="132" width="19.7215%" height="15" fill="rgb(206,12,3)" fg:x="36192" fg:w="11374"/><text x="63.0038%" y="142.50">Q_terms (3_agents_Simulation_de..</text></g><g><title>l_ux (3_agents_Simulation_decentralized.py:195) (1,025 samples, 1.78%)</title><rect x="80.6981%" y="148" width="1.7773%" height="15" fill="rgb(252,226,20)" fg:x="46541" fg:w="1025"/><text x="80.9481%" y="158.50">l..</text></g><g><title>discrete_dynamics_multiple (3_agents_Simulation_decentralized.py:57) (132 samples, 0.23%)</title><rect x="82.6175%" y="260" width="0.2289%" height="15" fill="rgb(216,123,35)" fg:x="47648" fg:w="132"/><text x="82.8675%" y="270.50"></text></g><g><title>hstack (autograd/numpy/numpy_wrapper.py:43) (80 samples, 0.14%)</title><rect x="82.7077%" y="276" width="0.1387%" height="15" fill="rgb(212,68,40)" fg:x="47700" fg:w="80"/><text x="82.9577%" y="286.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_wrapper.py:38) (79 samples, 0.14%)</title><rect x="82.7094%" y="292" width="0.1370%" height="15" fill="rgb(254,125,32)" fg:x="47701" fg:w="79"/><text x="82.9594%" y="302.50"></text></g><g><title>__radd__ (autograd/numpy/numpy_boxes.py:33) (87 samples, 0.15%)</title><rect x="82.9210%" y="308" width="0.1509%" height="15" fill="rgb(253,97,22)" fg:x="47823" fg:w="87"/><text x="83.1710%" y="318.50"></text></g><g><title>__rmul__ (autograd/numpy/numpy_boxes.py:35) (109 samples, 0.19%)</title><rect x="83.0718%" y="308" width="0.1890%" height="15" fill="rgb(241,101,14)" fg:x="47910" fg:w="109"/><text x="83.3218%" y="318.50"></text></g><g><title>array_from_scalar_or_array_gradmaker (autograd/numpy/numpy_vjps.py:686) (61 samples, 0.11%)</title><rect x="83.8330%" y="404" width="0.1058%" height="15" fill="rgb(238,103,29)" fg:x="48349" fg:w="61"/><text x="84.0830%" y="414.50"></text></g><g><title>vjp_argnums (autograd/core.py:66) (80 samples, 0.14%)</title><rect x="83.8070%" y="388" width="0.1387%" height="15" fill="rgb(233,195,47)" fg:x="48334" fg:w="80"/><text x="84.0570%" y="398.50"></text></g><g><title>f_wrapped (autograd/tracer.py:45) (103 samples, 0.18%)</title><rect x="83.7706%" y="356" width="0.1786%" height="15" fill="rgb(246,218,30)" fg:x="48313" fg:w="103"/><text x="84.0206%" y="366.50"></text></g><g><title>__init__ (autograd/core.py:36) (94 samples, 0.16%)</title><rect x="83.7862%" y="372" width="0.1630%" height="15" fill="rgb(219,145,47)" fg:x="48322" fg:w="94"/><text x="84.0362%" y="382.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:60) (217 samples, 0.38%)</title><rect x="83.6145%" y="340" width="0.3763%" height="15" fill="rgb(243,12,26)" fg:x="48223" fg:w="217"/><text x="83.8645%" y="350.50"></text></g><g><title>discrete_dynamics (3_agents_Simulation_decentralized.py:47) (729 samples, 1.26%)</title><rect x="82.8811%" y="292" width="1.2640%" height="15" fill="rgb(214,87,16)" fg:x="47800" fg:w="729"/><text x="83.1311%" y="302.50"></text></g><g><title>unicycle_continuous_dynamics (3_agents_Simulation_decentralized.py:32) (364 samples, 0.63%)</title><rect x="83.5139%" y="308" width="0.6311%" height="15" fill="rgb(208,99,42)" fg:x="48165" fg:w="364"/><text x="83.7639%" y="318.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:58) (353 samples, 0.61%)</title><rect x="83.5330%" y="324" width="0.6121%" height="15" fill="rgb(253,99,2)" fg:x="48176" fg:w="353"/><text x="83.7830%" y="334.50"></text></g><g><title>trace (autograd/tracer.py:10) (949 samples, 1.65%)</title><rect x="82.6019%" y="212" width="1.6455%" height="15" fill="rgb(220,168,23)" fg:x="47639" fg:w="949"/><text x="82.8519%" y="222.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (945 samples, 1.64%)</title><rect x="82.6088%" y="228" width="1.6385%" height="15" fill="rgb(242,38,24)" fg:x="47643" fg:w="945"/><text x="82.8588%" y="238.50"></text></g><g><title>f (3_agents_Simulation_decentralized.py:207) (942 samples, 1.63%)</title><rect x="82.6140%" y="244" width="1.6333%" height="15" fill="rgb(225,182,9)" fg:x="47646" fg:w="942"/><text x="82.8640%" y="254.50"></text></g><g><title>discrete_dynamics_multiple (3_agents_Simulation_decentralized.py:58) (808 samples, 1.40%)</title><rect x="82.8464%" y="260" width="1.4010%" height="15" fill="rgb(243,178,37)" fg:x="47780" fg:w="808"/><text x="83.0964%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (3_agents_Simulation_decentralized.py:58) (802 samples, 1.39%)</title><rect x="82.8568%" y="276" width="1.3906%" height="15" fill="rgb(232,139,19)" fg:x="47786" fg:w="802"/><text x="83.1068%" y="286.50"></text></g><g><title>make_vjp (autograd/core.py:10) (972 samples, 1.69%)</title><rect x="82.5984%" y="196" width="1.6854%" height="15" fill="rgb(225,201,24)" fg:x="47637" fg:w="972"/><text x="82.8484%" y="206.50"></text></g><g><title>jacobian (autograd/differential_operators.py:57) (983 samples, 1.70%)</title><rect x="82.5950%" y="180" width="1.7044%" height="15" fill="rgb(221,47,46)" fg:x="47635" fg:w="983"/><text x="82.8450%" y="190.50"></text></g><g><title>array (autograd/numpy/numpy_wrapper.py:60) (81 samples, 0.14%)</title><rect x="84.5387%" y="228" width="0.1404%" height="15" fill="rgb(249,23,13)" fg:x="48756" fg:w="81"/><text x="84.7887%" y="238.50"></text></g><g><title>standard_basis (autograd/numpy/numpy_vspaces.py:18) (115 samples, 0.20%)</title><rect x="84.6791%" y="228" width="0.1994%" height="15" fill="rgb(219,9,5)" fg:x="48837" fg:w="115"/><text x="84.9291%" y="238.50"></text></g><g><title>toposort (autograd/util.py:29) (105 samples, 0.18%)</title><rect x="85.4004%" y="260" width="0.1821%" height="15" fill="rgb(254,171,16)" fg:x="49253" fg:w="105"/><text x="85.6504%" y="270.50"></text></g><g><title>toposort (autograd/util.py:35) (117 samples, 0.20%)</title><rect x="85.7524%" y="260" width="0.2029%" height="15" fill="rgb(230,171,20)" fg:x="49456" fg:w="117"/><text x="86.0024%" y="270.50"></text></g><g><title>toposort (autograd/util.py:36) (79 samples, 0.14%)</title><rect x="85.9553%" y="260" width="0.1370%" height="15" fill="rgb(210,71,41)" fg:x="49573" fg:w="79"/><text x="86.2053%" y="270.50"></text></g><g><title>toposort (autograd/util.py:37) (79 samples, 0.14%)</title><rect x="86.0923%" y="260" width="0.1370%" height="15" fill="rgb(206,173,20)" fg:x="49652" fg:w="79"/><text x="86.3423%" y="270.50"></text></g><g><title>backward_pass (autograd/core.py:19) (742 samples, 1.29%)</title><rect x="84.9964%" y="244" width="1.2866%" height="15" fill="rgb(233,88,34)" fg:x="49020" fg:w="742"/><text x="85.2464%" y="254.50"></text></g><g><title>backward_pass (autograd/core.py:20) (77 samples, 0.13%)</title><rect x="86.2830%" y="244" width="0.1335%" height="15" fill="rgb(223,209,46)" fg:x="49762" fg:w="77"/><text x="86.5330%" y="254.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (67 samples, 0.12%)</title><rect x="87.1725%" y="292" width="0.1162%" height="15" fill="rgb(250,43,18)" fg:x="50275" fg:w="67"/><text x="87.4225%" y="302.50"></text></g><g><title>reshape (&lt;__array_function__ internals&gt;:5) (176 samples, 0.31%)</title><rect x="87.3580%" y="308" width="0.3052%" height="15" fill="rgb(208,13,10)" fg:x="50382" fg:w="176"/><text x="87.6080%" y="318.50"></text></g><g><title>reshape (numpy/core/fromnumeric.py:298) (155 samples, 0.27%)</title><rect x="87.3944%" y="324" width="0.2688%" height="15" fill="rgb(212,200,36)" fg:x="50403" fg:w="155"/><text x="87.6444%" y="334.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (87 samples, 0.15%)</title><rect x="87.5124%" y="340" width="0.1509%" height="15" fill="rgb(225,90,30)" fg:x="50471" fg:w="87"/><text x="87.7624%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (216 samples, 0.37%)</title><rect x="87.2904%" y="292" width="0.3745%" height="15" fill="rgb(236,182,39)" fg:x="50343" fg:w="216"/><text x="87.5404%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:582) (493 samples, 0.85%)</title><rect x="87.0477%" y="276" width="0.8548%" height="15" fill="rgb(212,144,35)" fg:x="50203" fg:w="493"/><text x="87.2977%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (128 samples, 0.22%)</title><rect x="87.6805%" y="292" width="0.2219%" height="15" fill="rgb(228,63,44)" fg:x="50568" fg:w="128"/><text x="87.9305%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:35) (211 samples, 0.37%)</title><rect x="87.9701%" y="292" width="0.3659%" height="15" fill="rgb(228,109,6)" fg:x="50735" fg:w="211"/><text x="88.2201%" y="302.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:649) (262 samples, 0.45%)</title><rect x="88.3672%" y="292" width="0.4543%" height="15" fill="rgb(238,117,24)" fg:x="50964" fg:w="262"/><text x="88.6172%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (190 samples, 0.33%)</title><rect x="88.4920%" y="308" width="0.3294%" height="15" fill="rgb(242,26,26)" fg:x="51036" fg:w="190"/><text x="88.7420%" y="318.50"></text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;:5) (83 samples, 0.14%)</title><rect x="89.1734%" y="324" width="0.1439%" height="15" fill="rgb(221,92,48)" fg:x="51429" fg:w="83"/><text x="89.4234%" y="334.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:654) (246 samples, 0.43%)</title><rect x="88.8943%" y="292" width="0.4265%" height="15" fill="rgb(209,209,32)" fg:x="51268" fg:w="246"/><text x="89.1443%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:61) (190 samples, 0.33%)</title><rect x="88.9914%" y="308" width="0.3294%" height="15" fill="rgb(221,70,22)" fg:x="51324" fg:w="190"/><text x="89.2414%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (820 samples, 1.42%)</title><rect x="87.9025%" y="276" width="1.4218%" height="15" fill="rgb(248,145,5)" fg:x="50696" fg:w="820"/><text x="88.1525%" y="286.50"></text></g><g><title>find_top_boxed_args (autograd/tracer.py:69) (61 samples, 0.11%)</title><rect x="89.5497%" y="308" width="0.1058%" height="15" fill="rgb(226,116,26)" fg:x="51646" fg:w="61"/><text x="89.7997%" y="318.50"></text></g><g><title>find_top_boxed_args (autograd/tracer.py:70) (101 samples, 0.18%)</title><rect x="89.6555%" y="308" width="0.1751%" height="15" fill="rgb(244,5,17)" fg:x="51707" fg:w="101"/><text x="89.9055%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (225 samples, 0.39%)</title><rect x="89.4613%" y="292" width="0.3901%" height="15" fill="rgb(252,159,33)" fg:x="51595" fg:w="225"/><text x="89.7113%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (200 samples, 0.35%)</title><rect x="89.8566%" y="292" width="0.3468%" height="15" fill="rgb(206,71,0)" fg:x="51823" fg:w="200"/><text x="90.1066%" y="302.50"></text></g><g><title>untake (autograd/numpy/numpy_vjps.py:700) (84 samples, 0.15%)</title><rect x="90.0577%" y="308" width="0.1456%" height="15" fill="rgb(233,118,54)" fg:x="51939" fg:w="84"/><text x="90.3077%" y="318.50"></text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;:4) (58 samples, 0.10%)</title><rect x="90.4565%" y="324" width="0.1006%" height="15" fill="rgb(234,83,48)" fg:x="52169" fg:w="58"/><text x="90.7065%" y="334.50"></text></g><g><title>iscomplexobj (&lt;__array_function__ internals&gt;:5) (145 samples, 0.25%)</title><rect x="90.5571%" y="324" width="0.2514%" height="15" fill="rgb(228,3,54)" fg:x="52227" fg:w="145"/><text x="90.8071%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:58) (298 samples, 0.52%)</title><rect x="90.3040%" y="308" width="0.5167%" height="15" fill="rgb(226,155,13)" fg:x="52081" fg:w="298"/><text x="90.5540%" y="318.50"></text></g><g><title>__init__ (autograd/numpy/numpy_vspaces.py:6) (65 samples, 0.11%)</title><rect x="90.9230%" y="324" width="0.1127%" height="15" fill="rgb(241,28,37)" fg:x="52438" fg:w="65"/><text x="91.1730%" y="334.50"></text></g><g><title>__init__ (autograd/numpy/numpy_vspaces.py:7) (72 samples, 0.12%)</title><rect x="91.0357%" y="324" width="0.1248%" height="15" fill="rgb(233,93,10)" fg:x="52503" fg:w="72"/><text x="91.2857%" y="334.50"></text></g><g><title>backward_pass (autograd/core.py:21) (2,753 samples, 4.77%)</title><rect x="86.4165%" y="244" width="4.7735%" height="15" fill="rgb(225,113,19)" fg:x="49839" fg:w="2753"/><text x="86.6665%" y="254.50">backwa..</text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (2,490 samples, 4.32%)</title><rect x="86.8725%" y="260" width="4.3174%" height="15" fill="rgb(241,2,18)" fg:x="50102" fg:w="2490"/><text x="87.1225%" y="270.50">&lt;lamb..</text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:701) (1,073 samples, 1.86%)</title><rect x="89.3295%" y="276" width="1.8605%" height="15" fill="rgb(228,207,21)" fg:x="51519" fg:w="1073"/><text x="89.5795%" y="286.50">&lt;..</text></g><g><title>vspace (autograd/core.py:233) (568 samples, 0.98%)</title><rect x="90.2051%" y="292" width="0.9849%" height="15" fill="rgb(213,211,35)" fg:x="52024" fg:w="568"/><text x="90.4551%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vspaces.py:59) (213 samples, 0.37%)</title><rect x="90.8207%" y="308" width="0.3693%" height="15" fill="rgb(209,83,10)" fg:x="52379" fg:w="213"/><text x="91.0707%" y="318.50"></text></g><g><title>backward_pass (autograd/core.py:22) (422 samples, 0.73%)</title><rect x="91.1900%" y="244" width="0.7317%" height="15" fill="rgb(209,164,1)" fg:x="52592" fg:w="422"/><text x="91.4400%" y="254.50"></text></g><g><title>&lt;genexpr&gt; (autograd/core.py:49) (92 samples, 0.16%)</title><rect x="91.7622%" y="260" width="0.1595%" height="15" fill="rgb(213,184,43)" fg:x="52922" fg:w="92"/><text x="92.0122%" y="270.50"></text></g><g><title>add_outgrads (autograd/core.py:159) (75 samples, 0.13%)</title><rect x="92.3066%" y="260" width="0.1300%" height="15" fill="rgb(231,61,34)" fg:x="53236" fg:w="75"/><text x="92.5566%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (111 samples, 0.19%)</title><rect x="92.6413%" y="276" width="0.1925%" height="15" fill="rgb(235,75,3)" fg:x="53429" fg:w="111"/><text x="92.8913%" y="286.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (541 samples, 0.94%)</title><rect x="92.9118%" y="308" width="0.9380%" height="15" fill="rgb(220,106,47)" fg:x="53585" fg:w="541"/><text x="93.1618%" y="318.50"></text></g><g><title>add_outgrads (autograd/core.py:165) (742 samples, 1.29%)</title><rect x="92.5650%" y="260" width="1.2866%" height="15" fill="rgb(210,196,33)" fg:x="53385" fg:w="742"/><text x="92.8150%" y="270.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (583 samples, 1.01%)</title><rect x="92.8407%" y="276" width="1.0109%" height="15" fill="rgb(229,154,42)" fg:x="53544" fg:w="583"/><text x="93.0907%" y="286.50"></text></g><g><title>sparse_add (autograd/core.py:186) (560 samples, 0.97%)</title><rect x="92.8806%" y="292" width="0.9710%" height="15" fill="rgb(228,114,26)" fg:x="53567" fg:w="560"/><text x="93.1306%" y="302.50"></text></g><g><title>f_wrapped (autograd/tracer.py:37) (93 samples, 0.16%)</title><rect x="93.9608%" y="276" width="0.1613%" height="15" fill="rgb(208,144,1)" fg:x="54190" fg:w="93"/><text x="94.2108%" y="286.50"></text></g><g><title>sparse_add (autograd/core.py:185) (69 samples, 0.12%)</title><rect x="94.1532%" y="292" width="0.1196%" height="15" fill="rgb(239,112,37)" fg:x="54301" fg:w="69"/><text x="94.4032%" y="302.50"></text></g><g><title>mut_add (autograd/numpy/numpy_vjps.py:698) (557 samples, 0.97%)</title><rect x="94.3041%" y="308" width="0.9658%" height="15" fill="rgb(210,96,50)" fg:x="54388" fg:w="557"/><text x="94.5541%" y="318.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (664 samples, 1.15%)</title><rect x="94.1220%" y="276" width="1.1513%" height="15" fill="rgb(222,178,2)" fg:x="54283" fg:w="664"/><text x="94.3720%" y="286.50"></text></g><g><title>sparse_add (autograd/core.py:186) (577 samples, 1.00%)</title><rect x="94.2729%" y="292" width="1.0005%" height="15" fill="rgb(226,74,18)" fg:x="54370" fg:w="577"/><text x="94.5229%" y="302.50"></text></g><g><title>add_outgrads (autograd/core.py:176) (847 samples, 1.47%)</title><rect x="93.8637%" y="260" width="1.4686%" height="15" fill="rgb(225,67,54)" fg:x="54134" fg:w="847"/><text x="94.1137%" y="270.50"></text></g><g><title>backward_pass (autograd/core.py:23) (1,990 samples, 3.45%)</title><rect x="91.9217%" y="244" width="3.4505%" height="15" fill="rgb(251,92,32)" fg:x="53014" fg:w="1990"/><text x="92.1717%" y="254.50">bac..</text></g><g><title>stack (autograd/numpy/numpy_wrapper.py:88) (6,315 samples, 10.95%)</title><rect x="84.4260%" y="196" width="10.9497%" height="15" fill="rgb(228,149,22)" fg:x="48691" fg:w="6315"/><text x="84.6760%" y="206.50">stack (autograd/..</text></g><g><title>&lt;listcomp&gt; (autograd/numpy/numpy_wrapper.py:88) (6,314 samples, 10.95%)</title><rect x="84.4277%" y="212" width="10.9479%" height="15" fill="rgb(243,54,13)" fg:x="48692" fg:w="6314"/><text x="84.6777%" y="222.50">&lt;listcomp&gt; (auto..</text></g><g><title>vjp (autograd/core.py:14) (6,013 samples, 10.43%)</title><rect x="84.9496%" y="228" width="10.4260%" height="15" fill="rgb(243,180,28)" fg:x="48993" fg:w="6013"/><text x="85.1996%" y="238.50">vjp (autograd/c..</text></g><g><title>nary_f (autograd/wrap_util.py:20) (7,396 samples, 12.82%)</title><rect x="82.5603%" y="164" width="12.8240%" height="15" fill="rgb(208,167,24)" fg:x="47615" fg:w="7396"/><text x="82.8103%" y="174.50">nary_f (autograd/wr..</text></g><g><title>jacobian (autograd/differential_operators.py:61) (6,378 samples, 11.06%)</title><rect x="84.3254%" y="180" width="11.0589%" height="15" fill="rgb(245,73,45)" fg:x="48633" fg:w="6378"/><text x="84.5754%" y="190.50">jacobian (autogr..</text></g><g><title>f_u (3_agents_Simulation_decentralized.py:217) (7,430 samples, 12.88%)</title><rect x="82.5395%" y="148" width="12.8830%" height="15" fill="rgb(237,203,48)" fg:x="47603" fg:w="7430"/><text x="82.7895%" y="158.50">f_u (3_agents_Simul..</text></g><g><title>cost_avoidance (3_agents_Simulation_decentralized.py:134) (120 samples, 0.21%)</title><rect x="95.4762%" y="388" width="0.2081%" height="15" fill="rgb(211,197,16)" fg:x="55064" fg:w="120"/><text x="95.7262%" y="398.50"></text></g><g><title>cost_stage (3_agents_Simulation_decentralized.py:143) (146 samples, 0.25%)</title><rect x="95.4745%" y="372" width="0.2532%" height="15" fill="rgb(243,99,51)" fg:x="55063" fg:w="146"/><text x="95.7245%" y="382.50"></text></g><g><title>f_wrapped (autograd/tracer.py:44) (65 samples, 0.11%)</title><rect x="95.8941%" y="420" width="0.1127%" height="15" fill="rgb(215,123,29)" fg:x="55305" fg:w="65"/><text x="96.1441%" y="430.50"></text></g><g><title>__matmul__ (autograd/numpy/numpy_boxes.py:32) (109 samples, 0.19%)</title><rect x="95.8750%" y="404" width="0.1890%" height="15" fill="rgb(239,186,37)" fg:x="55294" fg:w="109"/><text x="96.1250%" y="414.50"></text></g><g><title>cost_stage (3_agents_Simulation_decentralized.py:144) (227 samples, 0.39%)</title><rect x="95.7276%" y="372" width="0.3936%" height="15" fill="rgb(252,136,39)" fg:x="55209" fg:w="227"/><text x="95.9776%" y="382.50"></text></g><g><title>cost_trj (3_agents_Simulation_decentralized.py:92) (189 samples, 0.33%)</title><rect x="95.7935%" y="388" width="0.3277%" height="15" fill="rgb(223,213,32)" fg:x="55247" fg:w="189"/><text x="96.0435%" y="398.50"></text></g><g><title>trace (autograd/tracer.py:10) (406 samples, 0.70%)</title><rect x="95.4693%" y="324" width="0.7040%" height="15" fill="rgb(233,115,5)" fg:x="55060" fg:w="406"/><text x="95.7193%" y="334.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (405 samples, 0.70%)</title><rect x="95.4710%" y="340" width="0.7022%" height="15" fill="rgb(207,226,44)" fg:x="55061" fg:w="405"/><text x="95.7210%" y="350.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (405 samples, 0.70%)</title><rect x="95.4710%" y="356" width="0.7022%" height="15" fill="rgb(208,126,0)" fg:x="55061" fg:w="405"/><text x="95.7210%" y="366.50"></text></g><g><title>make_vjp (autograd/core.py:10) (413 samples, 0.72%)</title><rect x="95.4693%" y="308" width="0.7161%" height="15" fill="rgb(244,66,21)" fg:x="55060" fg:w="413"/><text x="95.7193%" y="318.50"></text></g><g><title>jacobian (autograd/differential_operators.py:57) (414 samples, 0.72%)</title><rect x="95.4693%" y="292" width="0.7178%" height="15" fill="rgb(222,97,12)" fg:x="55060" fg:w="414"/><text x="95.7193%" y="302.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:418) (106 samples, 0.18%)</title><rect x="96.4524%" y="388" width="0.1838%" height="15" fill="rgb(219,213,19)" fg:x="55627" fg:w="106"/><text x="96.7024%" y="398.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (131 samples, 0.23%)</title><rect x="96.4281%" y="372" width="0.2271%" height="15" fill="rgb(252,169,30)" fg:x="55613" fg:w="131"/><text x="96.6781%" y="382.50"></text></g><g><title>backward_pass (autograd/core.py:21) (193 samples, 0.33%)</title><rect x="96.4229%" y="356" width="0.3346%" height="15" fill="rgb(206,32,51)" fg:x="55610" fg:w="193"/><text x="96.6729%" y="366.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:78) (59 samples, 0.10%)</title><rect x="96.6553%" y="372" width="0.1023%" height="15" fill="rgb(250,172,42)" fg:x="55744" fg:w="59"/><text x="96.9053%" y="382.50"></text></g><g><title>stack (autograd/numpy/numpy_wrapper.py:88) (303 samples, 0.53%)</title><rect x="96.2912%" y="308" width="0.5254%" height="15" fill="rgb(209,34,43)" fg:x="55534" fg:w="303"/><text x="96.5412%" y="318.50"></text></g><g><title>&lt;listcomp&gt; (autograd/numpy/numpy_wrapper.py:88) (301 samples, 0.52%)</title><rect x="96.2946%" y="324" width="0.5219%" height="15" fill="rgb(223,11,35)" fg:x="55536" fg:w="301"/><text x="96.5446%" y="334.50"></text></g><g><title>vjp (autograd/core.py:14) (243 samples, 0.42%)</title><rect x="96.3952%" y="340" width="0.4213%" height="15" fill="rgb(251,219,26)" fg:x="55594" fg:w="243"/><text x="96.6452%" y="350.50"></text></g><g><title>trace (autograd/tracer.py:10) (795 samples, 1.38%)</title><rect x="95.4485%" y="244" width="1.3785%" height="15" fill="rgb(231,119,3)" fg:x="55048" fg:w="795"/><text x="95.6985%" y="254.50"></text></g><g><title>unary_f (autograd/wrap_util.py:15) (794 samples, 1.38%)</title><rect x="95.4502%" y="260" width="1.3767%" height="15" fill="rgb(216,97,11)" fg:x="55049" fg:w="794"/><text x="95.7002%" y="270.50"></text></g><g><title>nary_f (autograd/wrap_util.py:20) (790 samples, 1.37%)</title><rect x="95.4571%" y="276" width="1.3698%" height="15" fill="rgb(223,59,9)" fg:x="55053" fg:w="790"/><text x="95.7071%" y="286.50"></text></g><g><title>jacobian (autograd/differential_operators.py:61) (353 samples, 0.61%)</title><rect x="96.2149%" y="292" width="0.6121%" height="15" fill="rgb(233,93,31)" fg:x="55490" fg:w="353"/><text x="96.4649%" y="302.50"></text></g><g><title>make_vjp (autograd/core.py:10) (805 samples, 1.40%)</title><rect x="95.4485%" y="228" width="1.3958%" height="15" fill="rgb(239,81,33)" fg:x="55048" fg:w="805"/><text x="95.6985%" y="238.50"></text></g><g><title>jacobian (autograd/differential_operators.py:57) (807 samples, 1.40%)</title><rect x="95.4485%" y="212" width="1.3993%" height="15" fill="rgb(213,120,34)" fg:x="55048" fg:w="807"/><text x="95.6985%" y="222.50"></text></g><g><title>backward_pass (autograd/core.py:19) (116 samples, 0.20%)</title><rect x="97.0471%" y="276" width="0.2011%" height="15" fill="rgb(243,49,53)" fg:x="55970" fg:w="116"/><text x="97.2971%" y="286.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;:5) (84 samples, 0.15%)</title><rect x="97.6315%" y="340" width="0.1456%" height="15" fill="rgb(247,216,33)" fg:x="56307" fg:w="84"/><text x="97.8815%" y="350.50"></text></g><g><title>prod (numpy/core/fromnumeric.py:3051) (75 samples, 0.13%)</title><rect x="97.6471%" y="356" width="0.1300%" height="15" fill="rgb(226,26,14)" fg:x="56316" fg:w="75"/><text x="97.8971%" y="366.50"></text></g><g><title>repeat_to_match_shape (autograd/numpy/numpy_vjps.py:282) (108 samples, 0.19%)</title><rect x="97.5951%" y="324" width="0.1873%" height="15" fill="rgb(215,49,53)" fg:x="56286" fg:w="108"/><text x="97.8451%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:299) (171 samples, 0.30%)</title><rect x="97.5621%" y="308" width="0.2965%" height="15" fill="rgb(245,162,40)" fg:x="56267" fg:w="171"/><text x="97.8121%" y="318.50"></text></g><g><title>matmul_adjoint_0 (autograd/numpy/numpy_vjps.py:395) (72 samples, 0.12%)</title><rect x="98.0962%" y="324" width="0.1248%" height="15" fill="rgb(229,68,17)" fg:x="56575" fg:w="72"/><text x="98.3462%" y="334.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:650) (66 samples, 0.11%)</title><rect x="98.2938%" y="340" width="0.1144%" height="15" fill="rgb(213,182,10)" fg:x="56689" fg:w="66"/><text x="98.5438%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (59 samples, 0.10%)</title><rect x="98.3060%" y="356" width="0.1023%" height="15" fill="rgb(245,125,30)" fg:x="56696" fg:w="59"/><text x="98.5560%" y="366.50"></text></g><g><title>unbroadcast (autograd/numpy/numpy_vjps.py:653) (69 samples, 0.12%)</title><rect x="98.4169%" y="340" width="0.1196%" height="15" fill="rgb(232,202,2)" fg:x="56760" fg:w="69"/><text x="98.6669%" y="350.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (64 samples, 0.11%)</title><rect x="98.4256%" y="356" width="0.1110%" height="15" fill="rgb(237,140,51)" fg:x="56765" fg:w="64"/><text x="98.6756%" y="366.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:5) (61 samples, 0.11%)</title><rect x="98.4308%" y="372" width="0.1058%" height="15" fill="rgb(236,157,25)" fg:x="56768" fg:w="61"/><text x="98.6808%" y="382.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:418) (421 samples, 0.73%)</title><rect x="97.8586%" y="308" width="0.7300%" height="15" fill="rgb(219,209,0)" fg:x="56438" fg:w="421"/><text x="98.1086%" y="318.50"></text></g><g><title>matmul_adjoint_0 (autograd/numpy/numpy_vjps.py:396) (212 samples, 0.37%)</title><rect x="98.2210%" y="324" width="0.3676%" height="15" fill="rgb(240,116,54)" fg:x="56647" fg:w="212"/><text x="98.4710%" y="334.50"></text></g><g><title>&lt;lambda&gt; (autograd/numpy/numpy_vjps.py:660) (62 samples, 0.11%)</title><rect x="98.5886%" y="308" width="0.1075%" height="15" fill="rgb(216,10,36)" fg:x="56859" fg:w="62"/><text x="98.8386%" y="318.50"></text></g><g><title>&lt;lambda&gt; (autograd/core.py:67) (840 samples, 1.46%)</title><rect x="97.3194%" y="292" width="1.4565%" height="15" fill="rgb(222,72,44)" fg:x="56127" fg:w="840"/><text x="97.5694%" y="302.50"></text></g><g><title>backward_pass (autograd/core.py:21) (871 samples, 1.51%)</title><rect x="97.2691%" y="276" width="1.5102%" height="15" fill="rgb(232,159,9)" fg:x="56098" fg:w="871"/><text x="97.5191%" y="286.50"></text></g><g><title>f_wrapped (autograd/tracer.py:48) (63 samples, 0.11%)</title><rect x="99.0099%" y="308" width="0.1092%" height="15" fill="rgb(210,39,32)" fg:x="57102" fg:w="63"/><text x="99.2599%" y="318.50"></text></g><g><title>stack (autograd/numpy/numpy_wrapper.py:88) (1,291 samples, 2.24%)</title><rect x="96.8842%" y="228" width="2.2385%" height="15" fill="rgb(216,194,45)" fg:x="55876" fg:w="1291"/><text x="97.1342%" y="238.50">s..</text></g><g><title>&lt;listcomp&gt; (autograd/numpy/numpy_wrapper.py:88) (1,290 samples, 2.24%)</title><rect x="96.8859%" y="244" width="2.2367%" height="15" fill="rgb(218,18,35)" fg:x="55877" fg:w="1290"/><text x="97.1359%" y="254.50">&lt;..</text></g><g><title>vjp (autograd/core.py:14) (1,198 samples, 2.08%)</title><rect x="97.0454%" y="260" width="2.0772%" height="15" fill="rgb(207,83,51)" fg:x="55969" fg:w="1198"/><text x="97.2954%" y="270.50">v..</text></g><g><title>backward_pass (autograd/core.py:23) (154 samples, 0.27%)</title><rect x="98.8556%" y="276" width="0.2670%" height="15" fill="rgb(225,63,43)" fg:x="57013" fg:w="154"/><text x="99.1056%" y="286.50"></text></g><g><title>add_outgrads (autograd/core.py:176) (75 samples, 0.13%)</title><rect x="98.9926%" y="292" width="0.1300%" height="15" fill="rgb(207,57,36)" fg:x="57092" fg:w="75"/><text x="99.2426%" y="302.50"></text></g><g><title>nary_f (autograd/wrap_util.py:20) (2,133 samples, 3.70%)</title><rect x="95.4346%" y="196" width="3.6984%" height="15" fill="rgb(216,99,33)" fg:x="55040" fg:w="2133"/><text x="95.6846%" y="206.50">nary..</text></g><g><title>jacobian (autograd/differential_operators.py:61) (1,314 samples, 2.28%)</title><rect x="96.8547%" y="212" width="2.2784%" height="15" fill="rgb(225,42,16)" fg:x="55859" fg:w="1314"/><text x="97.1047%" y="222.50">j..</text></g><g><title>nary_f (autograd/wrap_util.py:20) (2,143 samples, 3.72%)</title><rect x="95.4294%" y="164" width="3.7158%" height="15" fill="rgb(220,201,45)" fg:x="55037" fg:w="2143"/><text x="95.6794%" y="174.50">nary..</text></g><g><title>hessian (autograd/differential_operators.py:78) (2,141 samples, 3.71%)</title><rect x="95.4329%" y="180" width="3.7123%" height="15" fill="rgb(225,33,4)" fg:x="55039" fg:w="2141"/><text x="95.6829%" y="190.50">hess..</text></g><g><title>backward_pass (3_agents_Simulation_decentralized.py:309) (57,175 samples, 99.14%)</title><rect x="0.0347%" y="116" width="99.1365%" height="15" fill="rgb(224,33,50)" fg:x="20" fg:w="57175"/><text x="0.2847%" y="126.50">backward_pass (3_agents_Simulation_decentralized.py:309)</text></g><g><title>Q_terms (3_agents_Simulation_decentralized.py:246) (9,629 samples, 16.70%)</title><rect x="82.4753%" y="132" width="16.6959%" height="15" fill="rgb(246,198,51)" fg:x="47566" fg:w="9629"/><text x="82.7253%" y="142.50">Q_terms (3_agents_Simulati..</text></g><g><title>l_uu (3_agents_Simulation_decentralized.py:187) (2,162 samples, 3.75%)</title><rect x="95.4225%" y="148" width="3.7487%" height="15" fill="rgb(205,22,4)" fg:x="55033" fg:w="2162"/><text x="95.6725%" y="158.50">l_uu..</text></g><g><title>backward_pass (3_agents_Simulation_decentralized.py:314) (81 samples, 0.14%)</title><rect x="99.2076%" y="116" width="0.1404%" height="15" fill="rgb(206,3,8)" fg:x="57216" fg:w="81"/><text x="99.4576%" y="126.50"></text></g><g><title>run_ilqr (3_agents_Simulation_decentralized.py:350) (57,319 samples, 99.39%)</title><rect x="0.0295%" y="100" width="99.3862%" height="15" fill="rgb(251,23,15)" fg:x="17" fg:w="57319"/><text x="0.2795%" y="110.50">run_ilqr (3_agents_Simulation_decentralized.py:350)</text></g><g><title>run_ilqr (3_agents_Simulation_decentralized.py:352) (91 samples, 0.16%)</title><rect x="99.4157%" y="100" width="0.1578%" height="15" fill="rgb(252,88,28)" fg:x="57336" fg:w="91"/><text x="99.6657%" y="110.50"></text></g><g><title>forward_pass (3_agents_Simulation_decentralized.py:288) (87 samples, 0.15%)</title><rect x="99.4226%" y="116" width="0.1509%" height="15" fill="rgb(212,127,14)" fg:x="57340" fg:w="87"/><text x="99.6726%" y="126.50"></text></g><g><title>discrete_dynamics_multiple (3_agents_Simulation_decentralized.py:58) (69 samples, 0.12%)</title><rect x="99.4538%" y="132" width="0.1196%" height="15" fill="rgb(247,145,37)" fg:x="57358" fg:w="69"/><text x="99.7038%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (3_agents_Simulation_decentralized.py:58) (69 samples, 0.12%)</title><rect x="99.4538%" y="148" width="0.1196%" height="15" fill="rgb(209,117,53)" fg:x="57358" fg:w="69"/><text x="99.7038%" y="158.50"></text></g><g><title>discrete_dynamics (3_agents_Simulation_decentralized.py:47) (66 samples, 0.11%)</title><rect x="99.4590%" y="164" width="0.1144%" height="15" fill="rgb(212,90,42)" fg:x="57361" fg:w="66"/><text x="99.7090%" y="174.50"></text></g><g><title>cost_avoidance (3_agents_Simulation_decentralized.py:134) (68 samples, 0.12%)</title><rect x="99.5752%" y="148" width="0.1179%" height="15" fill="rgb(218,164,37)" fg:x="57428" fg:w="68"/><text x="99.8252%" y="158.50"></text></g><g><title>cost_stage (3_agents_Simulation_decentralized.py:143) (87 samples, 0.15%)</title><rect x="99.5752%" y="132" width="0.1509%" height="15" fill="rgb(246,65,34)" fg:x="57428" fg:w="87"/><text x="99.8252%" y="142.50"></text></g><g><title>&lt;module&gt; (3_agents_Simulation_decentralized.py:434) (57,566 samples, 99.81%)</title><rect x="0.0000%" y="68" width="99.8145%" height="15" fill="rgb(231,100,33)" fg:x="0" fg:w="57566"/><text x="0.2500%" y="78.50">&lt;module&gt; (3_agents_Simulation_decentralized.py:434)</text></g><g><title>main (3_agents_Simulation_decentralized.py:427) (57,566 samples, 99.81%)</title><rect x="0.0000%" y="84" width="99.8145%" height="15" fill="rgb(228,126,14)" fg:x="0" fg:w="57566"/><text x="0.2500%" y="94.50">main (3_agents_Simulation_decentralized.py:427)</text></g><g><title>run_ilqr (3_agents_Simulation_decentralized.py:354) (139 samples, 0.24%)</title><rect x="99.5735%" y="100" width="0.2410%" height="15" fill="rgb(215,173,21)" fg:x="57427" fg:w="139"/><text x="99.8235%" y="110.50"></text></g><g><title>cost_sum (3_agents_Simulation_decentralized.py:154) (139 samples, 0.24%)</title><rect x="99.5735%" y="116" width="0.2410%" height="15" fill="rgb(210,6,40)" fg:x="57427" fg:w="139"/><text x="99.8235%" y="126.50"></text></g><g><title>all (57,673 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(212,48,18)" fg:x="0" fg:w="57673"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (3_agents_Simulation_decentralized.py:7) (72 samples, 0.12%)</title><rect x="99.8752%" y="68" width="0.1248%" height="15" fill="rgb(230,214,11)" fg:x="57601" fg:w="72"/><text x="100.1252%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (72 samples, 0.12%)</title><rect x="99.8752%" y="84" width="0.1248%" height="15" fill="rgb(254,105,39)" fg:x="57601" fg:w="72"/><text x="100.1252%" y="94.50"></text></g></svg></svg>